---
title: "Grouped bar graphs"
format:
  html:
    toc: true
    toc-location: right
    toc-title: Contents
    code-fold: true
    out-height: '100%'
    out-width: '100%'
execute:
  warning: false
  message: false
---

```{r}
#| label: setup
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(colorblindr)
library(downlit)
# options ----
options(
  repos = "https://cloud.r-project.org",
  dplyr.print_min = 6, 
  dplyr.print_max = 6, 
  scipen = 9999)
# fonts ----
library(extrafont)
library(sysfonts)
# import font
extrafont::font_import(
    paths = "../assets/Ubuntu/",
    prompt = FALSE)
# add font
sysfonts::font_add(
    family =  "Ubuntu", 
    regular = "../assets/Ubuntu/Ubuntu-Regular.ttf")
# use font
showtext::showtext_auto()
# add theme
source("../R/theme_ggp2g.R")
# set theme
ggplot2::theme_set(theme_ggp2g(
    base_size = 16))
# install data packages ----
install.packages("palmerpenguins")
library(palmerpenguins)
```



:::: {.callout-note collapse="false" icon=false}
## Graph info
::: {style="font-size: 1.25em; color: #02577A;"}
**Should I use this graph?**
:::

<br>

```{r}
#| label: full_code_display
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '60%'
#| out-width: '60%'
#| fig-align: right
library(palmerpenguins) 
library(ggplot2)
peng_grp_col <- palmerpenguins::penguins |>
    dplyr::select(body_mass_g, island) |> 
    tidyr::drop_na() |> 
    dplyr::group_by(island) |>
    dplyr::summarise(
        avg_body_mass_g = mean(body_mass_g)
        ) |>
    dplyr::ungroup()
# glimpse(peng_grp_col)
labs_grp_col <- labs(
    title = "Average Penguin Mass",
    subtitle = "What's the average mass of penguins per Island?",
    x = "Island",
    y = "Average penguin body mass (g)")
ggp2_grp_col <- ggplot(data = peng_grp_col,
              aes(x = island, 
                  y = avg_body_mass_g)) + 
        geom_col(aes(fill = island),
            show.legend = FALSE)
ggp2_grp_col + 
    labs_grp_col
```

::: {style="font-size: 1.10em; color: #02577A;"}
**This graph requires:**
:::

::: {style="font-size: 0.90em; color: #043b67;"}
`r emo::ji("check")` a categorical variable      
:::

::: {style="font-size: 0.90em; color: #043b67;"}
`r emo::ji("check")` a numeric (continuous) variable
:::

::::

## Description 

`geom_col()` allows us to display 'grouped' numerical values across levels (or groups) of a categorical variable. Grouped bar graphs assume the statistical measure (i.e., the value that the length of the bars will be derived from) is contained in a variable and mapped to the `x` or `y` aesthetic. 

## Getting set up

:::: {.panel-tabset}

### Packages

::: {style="font-size: 0.90em; color: #1e83c8;"}
**PACKAGES:**
:::

::: {style="font-size: 0.85em;"}
Install packages.
:::


::: {style="font-size: 0.75em;"}
```{r}
#| label: pkg_code_grp_col
#| code-fold: show
#| eval: true
#| echo: true
#| warning: false
#| message: false
#| results: hide
install.packages("palmerpenguins")
library(palmerpenguins) 
library(ggplot2)
```
:::

### Data

::: {style="font-size: 0.90em; color: #1e83c8;"}
**DATA:**
:::

::: {.column-margin}
![Artwork by @allison_horst](../www/lter_penguins.png){fig-align="right" width="100%" height="100%"}
:::

::: {style="font-size: 0.85em;"}
Remove the missing values and reduce the `palmerpenguins::penguins` dataset to only `body_mass_g` and `island`, then group the data by `island` and calculate the mean `body_mass_g` (as `avg_body_mass_g`). 
:::

::: {style="font-size: 0.75em;"}
```{r}
#| label: data_code_grp_col
#| eval: true
#| echo: true
peng_grp_col <- palmerpenguins::penguins |>
    dplyr::select(body_mass_g, island) |> 
    tidyr::drop_na() |> 
    dplyr::group_by(island) |>
    dplyr::summarise(
        avg_body_mass_g = mean(body_mass_g)
        ) |>
    dplyr::ungroup()
glimpse(peng_grp_col)
```
:::
::::

## The grammar

:::: {.panel-tabset}

### Code

::: {style="font-size: 0.90em; color: #1e83c8;"}
**CODE:**
:::

::: {style="font-size: 0.85em;"}

Create labels with `labs()`

Initialize the graph with `ggplot()` and provide `data`

Map `island` to the `x` and `avg_body_mass_g` to the `y`

Map `island` to `fill` *inside* the `aes()` of `geom_col()` 

:::

::: {style="font-size: 0.75em;"}
```{r}
#| label: code_graph_grp_col
#| code-fold: show
#| eval: false
#| echo: true 
#| warning: false
#| message: false
#| out-height: '100%'
#| out-width: '100%'
#| column: page-inset-right
#| layout-nrow: 1
labs_grp_col <- labs(
    title = "Average Penguin Mass",
    subtitle = "What's the average mass of penguins per Island?",
    x = "Island",
    y = "Average penguin body mass (g)")
ggp2_grp_col <- ggplot(data = peng_grp_col,
              aes(x = island, 
                  y = avg_body_mass_g)) + 
        geom_col(aes(fill = island),
            show.legend = FALSE)
ggp2_grp_col + 
    labs_grp_col
```
:::

### Graph

::: {style="font-size: 0.90em; color: #1e83c8;"}
**GRAPH:**
:::

```{r}
#| label: create_graph_grp_col
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '100%'
#| out-width: '100%'
#| column: page-inset-right
#| layout-nrow: 1
labs_grp_col <- labs(
    title = "Average Penguin Mass",
    subtitle = "What's the average mass of penguins per Island?",
    x = "Island",
    y = "Average penguin body mass (g)")
ggp2_grp_col <- ggplot(data = peng_grp_col,
              aes(x = island, 
                  y = avg_body_mass_g)) + 
        geom_col(aes(fill = island),
            show.legend = FALSE)
ggp2_grp_col + 
    labs_grp_col
```

::::
