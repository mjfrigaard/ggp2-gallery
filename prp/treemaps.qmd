---
title: "Treemaps"
execute:
  warning: false
  message: false
---

```{r}
#| label: setup
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(colorblindr)
library(downlit)
# options ----
options(
  repos = "https://cloud.r-project.org",
  dplyr.print_min = 6, 
  dplyr.print_max = 6, 
  scipen = 9999)
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 16))
devtools::install_github("wilkox/treemapify")
install.packages("palmerpenguins")
```



:::: {.callout-tip collapse="false"}
## Graph info
::: {style="font-size: 1.25em; color: #38B44A;"}
**When would I use this graph?**
:::

<br>

```{r}
#| label: full_code_display
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '60%'
#| out-width: '60%'
#| fig-align: right
library(treemapify) 
library(palmerpenguins)
library(ggplot2)
treemap_peng <- penguins |> 
                  select(species, island, sex) |> 
                  tidyr::drop_na() |> 
                  group_by(species, island, sex) |>
  count(species, island, sex) |> 
  ungroup()
labs_treemap <- labs(
  title = "Species, island, and sex of adult penguins",
    fill = "Sex")
ggp2_treemap <- ggplot(treemap_peng, 
       aes(area = n, 
           fill = sex, 
           label = sex,
           subgroup = species,
           subgroup2 = island)) +
       treemapify::geom_treemap() +
       treemapify::geom_treemap_text(
           place = "bottomright",
           color = "#d0d0d0",
           min.size = 0,
           alpha = 0.90,
           fontface = "italic",
           family = "sans") 
ggp2_tm_subgroup <- ggp2_treemap +
    treemapify::geom_treemap_subgroup2_border(
           color = "#282b2d",
           size = 4.0) + 
       treemapify::geom_treemap_subgroup2_text(
           place = "center",
           alpha = 0.65,
           color = "#282b2d",
           min.size = 0,
           family = "sans")
ggp2_tm_subgroup2 <- ggp2_tm_subgroup + 
       treemapify::geom_treemap_subgroup_border(
           color = "#ffffff", 
           size = 4) + 
       treemapify::geom_treemap_subgroup_text(
           place = "topleft",
           alpha = 0.65,
           grow = TRUE,
           color = "#ffffff",
           min.size = 0,
           family = "mono",
           fontface = "bold")

ggp2_tm_subgroup2 + 
  labs_treemap
```

Treemaps display proportionally divided rectangular hierarchies for levels of categorical variables. The layout consists of 'squarified' tiles, which display the relative contribution of each categorical value to the overall graph space. 

We'll build a treemap using the [`treemapify` package.](http://wilkox.org/treemapify/) Also check out [mosaic plots](https://mjfrigaard.github.io/ggp2-gallery/prp/mosaic_plot.html).

::::


:::: {.panel-tabset}

### Packages

::: {style="font-size: 0.90em; color: #1e83c8;"}
**PACKAGES:**
:::

::: {style="font-size: 0.85em;"}
Install packages.
:::


::: {style="font-size: 0.75em;"}
```{r}
#| label: pkg_code_treemap
#| eval: true
#| echo: true
#| warning: false
#| message: false
#| results: hide
devtools::install_github("wilkox/treemapify")
install.packages("palmerpenguins")
library(treemapify) 
library(palmerpenguins)
library(ggplot2)
```
:::

### Data

::: {style="font-size: 0.90em; color: #1e83c8;"}
**DATA:**
:::

![](../www/lter_penguins.png){fig-align="right" width="40%" height="40%"}

::: {style="font-size: 0.85em;"}
Filter the missing values from `sex`, group the data by `species`, `island`, and `sex`, then count the `species` and `island` (then `ungroup()`).
:::

::: {style="font-size: 0.75em;"}
```{r}
#| label: data_code_treemap
#| eval: true
#| echo: true
treemap_peng <- penguins |> 
                  select(species, island, sex) |> 
                  tidyr::drop_na() |> 
                  group_by(species, island, sex) |>
  count(species, island, sex) |> 
  ungroup()
glimpse(treemap_peng)
```
:::
::::

:::: {.panel-tabset}

### Code

::: {style="font-size: 0.90em; color: #1e83c8;"}
**BASIC TREEMAP:**
:::

::: {style="font-size: 0.85em;"}

Create the labels

- Map the `n` to `area`, `sex` to `fill` and `label`, `species` to `subgroup`, and `island` to `subgroup2`

- Add `geom_treemap()`

- Add `geom_treemap_text()`   

  - `place`: this controls where the boxes start      
  - `color`: text color    
  - `min.size`: the minimum font size (when re-sizing)    
  - `alpha`: opacity      
  - `fontface`: `itlalic`/`bond`    
  - `family`: `"sans"`/`"sansserif"`/`"mono"`  

:::

::: {style="font-size: 0.75em;"}
```{r}
#| label: code_graph_treemap
#| eval: false
#| echo: true 
#| warning: false
#| message: false
labs_treemap <- labs(
  title = "Species, island, and sex of adult penguins")
ggp2_treemap <- ggplot(treemap_peng, 
       aes(area = n, 
           fill = sex, 
           label = sex,
           subgroup = species,
           subgroup2 = island)) +
       treemapify::geom_treemap() +
       treemapify::geom_treemap_text(
           place = "bottomright",
           color = "#282b2d",
           min.size = 0,
           alpha = 0.75,
           fontface = "italic",
           family = "sans") 
ggp2_treemap + 
  labs_treemap
```
:::

### Treemap

::: {style="font-size: 0.90em; color: #1e83c8;"}
**TREEMAP:**
:::

```{r}
#| label: create_graph_treemap
#| eval: true
#| echo: false
#| warning: false
#| message: false
labs_treemap <- labs(
  title = "Species, island, and sex of adult penguins",
    fill = "Sex")
ggp2_treemap <- ggplot(treemap_peng, 
       aes(area = n, 
           fill = sex, 
           label = sex,
           subgroup = species,
           subgroup2 = island)) +
       treemapify::geom_treemap() +
       treemapify::geom_treemap_text(
           place = "bottomright",
           color = "#d0d0d0",
           min.size = 0,
           alpha = 0.90,
           fontface = "italic",
           family = "sans") 
ggp2_treemap + 
  labs_treemap
```

### Subgroup 

::: {style="font-size: 0.90em; color: #1e83c8;"}
**SUBGROUP:**
:::

::: {style="font-size: 0.85em;"}

Add `geom_treemap_subgroup_border()`

  - Set the `size` and `color`    

Add `geom_treemap_subgroup_text()`

  - `place`: this controls where the boxes start      
  - `color`: text color    
  - `min.size`: the minimum font size (when re-sizing)    
  - `alpha`: opacity      
  - `fontface`: `itlalic`/`bond`    
  - `family`: `"sans"`/`"sansserif"`/`"mono"`  

:::

::: {style="font-size: 0.75em;"}
```{r}
#| label: code_graph_treemap_sgb
#| eval: true
#| echo: true 
#| warning: false
#| message: false
ggp2_tm_subgroup <- ggp2_treemap +
    treemapify::geom_treemap_subgroup2_border(
           color = "#282b2d",
           size = 4.0) + 
       treemapify::geom_treemap_subgroup2_text(
           place = "center",
           alpha = 0.65,
           color = "#282b2d",
           min.size = 0,
           family = "sans")
ggp2_tm_subgroup +
  labs_treemap
```
:::

### Subgroup 2

::: {style="font-size: 0.90em; color: #1e83c8;"}
**SUBGROUP 2:**
:::

::: {style="font-size: 0.85em;"}

- Add `geom_treemap_subgroup2_border()`

  - Set the `size` and `color`  

- Add `geom_treemap_subgroup2_text()`

  - `place`: this controls where the boxes start      
  - `color`: text color    
  - `min.size`: the minimum font size (when re-sizing)    
  - `alpha`: opacity      
  - `fontface`: `itlalic`/`bond`    
  - `family`: `"sans"`/`"sansserif"`/`"mono"`  


See full list of arguments [here](http://wilkox.org/treemapify/).
:::

::: {style="font-size: 0.75em;"}
```{r}
#| label: code_graph_tmap_sgb_2
#| eval: true
#| echo: true 
#| warning: false
#| message: false
ggp2_tm_subgroup2 <- ggp2_tm_subgroup + 
       treemapify::geom_treemap_subgroup_border(
           color = "#ffffff", 
           size = 4) + 
       treemapify::geom_treemap_subgroup_text(
           place = "topleft",
           alpha = 0.65,
           grow = TRUE,
           color = "#ffffff",
           min.size = 0,
           family = "mono",
           fontface = "bold")

ggp2_tm_subgroup2 + 
  labs_treemap
```
:::

::::
