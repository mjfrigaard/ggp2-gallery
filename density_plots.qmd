---
title: "Density plots"
format:
  html:
    toc: true
    toc-location: right
    toc-title: Contents
    code-fold: true
    out-height: '100%'
    out-width: '100%'
execute:
  warning: false
  message: false
---

```{r}
#| label: setup
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(colorblindr)
library(downlit)
library(xml2)
library(reactable)
# options ----
options(
  repos = "https://cloud.r-project.org",
  dplyr.print_min = 6, 
  dplyr.print_max = 6, 
  scipen = 9999)
# fonts ----
library(extrafont)
library(sysfonts)
# import font
extrafont::font_import(
    paths = "assets/Ubuntu/",
    prompt = FALSE)
# add font
sysfonts::font_add(
    family =  "Ubuntu", 
    regular = "assets/Ubuntu/Ubuntu-Regular.ttf")
# use font
showtext::showtext_auto()
# add theme
source("R/theme_ggp2g.R")
# set theme
ggplot2::theme_set(theme_ggp2g(
    base_size = 16))
# install data packages ----
install.packages("ggplot2movies")
install.packages("palmerpenguins")
```




:::: {.callout-note collapse="false" icon=false}
## Graph info
::: {style="font-size: 1.25em; color: #02577A;"}
**Should I use this graph?**
:::

<br>

```{r}
#| label: full_code_display
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '60%'
#| out-width: '60%'
#| fig-align: right
library(palmerpenguins) 
library(ggplot2)
penguins <- palmerpenguins::penguins
labs_density <- labs(
  title = "Adult foraging penguins",
  subtitle = "Distribution of flipper length",
  x = "Flipper length (millimeters)")
ggp2_density <- ggplot(data = penguins, 
        aes(x = flipper_length_mm)) + 
      geom_density() 

ggp2_density +
  labs_density
```

::: {style="font-size: 1.10em; color: #02577A;"}
**This graph requires:**
:::

::: {style="font-size: 0.90em; color: #043b67;"}
`r emo::ji("check")` a numeric (continuous) variable
:::

::::

## Description

Density plots are similar to a histogram or frequency polygon, except the outline of the distribution has been ‘smoothed.’

Instead of dividing the `x` axis into discrete ‘bins’ to create groupings for the variable's values, density plots transform the distribution according to a kernel density estimate.

## Getting set up

:::: {.panel-tabset}

### Packages

::: {style="font-size: 1.15em; color: #1e83c8;"}
**PACKAGES:**
:::

::: {style="font-size: 0.85em;"}
Install packages.
:::


::: {style="font-size: 0.75em;"}
```{r}
#| label: pkg_code_density
#| code-fold: show
#| eval: true
#| echo: true
#| warning: false
#| message: false
#| results: hide
install.packages("palmerpenguins")
library(palmerpenguins) 
library(ggplot2)
```
:::

### Data

::: {style="font-size: 1.15em; color: #1e83c8;"}
**DATA:**
:::

::: {.column-margin}
![Artwork by @allison_horst](../www/lter_penguins.png){fig-align="right" width="100%" height="100%"}
:::

::: {style="font-size: 0.85em;"}
The `penguins` data.
:::

::: {style="font-size: 0.75em;"}
```{r}
#| label: data_code_density
#| eval: true
#| echo: true
penguins <- palmerpenguins::penguins
glimpse(penguins)
```
:::
::::

## The grammar

:::: {.panel-tabset}

### Code

::: {style="font-size: 1.15em; color: #1e83c8;"}
**CODE:**
:::

::: {style="font-size: 0.85em;"}

Create labels with `labs()`

Initialize the graph with `ggplot()` and provide `data`

Map `flipper_length_mm` to the `x` axis

Add the `geom_density()` layer

:::

::: {style="font-size: 0.75em;"}
```{r}
#| label: code_graph_density
#| code-fold: show
#| eval: false
#| echo: true 
#| warning: false
#| message: false
#| column: page-inset-right
#| layout-nrow: 1
labs_density <- labs(
  title = "Adult foraging penguins",
  subtitle = "Distribution of flipper length",
  x = "Flipper length (millimeters)")
ggp2_density <- ggplot(data = penguins, 
        aes(x = flipper_length_mm)) + 
      geom_density() 

ggp2_density +
  labs_density
```
:::

### Graph

::: {style="font-size: 1.15em; color: #1e83c8;"}
**GRAPH:**
:::

```{r}
#| label: create_graph_density
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| column: page-inset-right
#| layout-nrow: 1
labs_density <- labs(
  title = "Adult foraging penguins",
  subtitle = "Distribution of flipper length",
  x = "Flipper length (millimeters)")
ggp2_density <- ggplot(data = penguins, 
        aes(x = flipper_length_mm)) + 
      geom_density() 

ggp2_density +
  labs_density
```

::: {style="font-size: 0.85em;"}
A downside of using density plots is the lack of interpretability of the `y` axis. 
:::

::::
