[
  {
    "objectID": "amt/waffle_chart.html",
    "href": "amt/waffle_chart.html",
    "title": "Waffle charts",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ndevtools::install_github(\"liamgilbey/ggwaffle\")\nlibrary(ggwaffle)\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nWaffle charts require a special data transformation with ggwaffle::waffle_iron()\nSet the group argument in ggwaffle::aes_d() as the categorical variable you want to see the relative counts for:\n\n\n\npenguins <- palmerpenguins::penguins\npenguins <- dplyr::mutate(penguins, \n              species = as.character(species))\nwaffle_peng <- ggwaffle::waffle_iron(penguins,\n                      aes_d(group = species))\n\nglimpse(waffle_peng)\n\nRows: 344\nColumns: 3\n$ y     <int> 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6…\n$ x     <int> 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3…\n$ group <chr> \"Adelie\", \"Adelie\", \"Adelie\", \"Adelie\", \"Adelie\", \"Adelie\", \"Ade…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap the x and y to the x and y axes\nMap group to fill\nAdd ggwaffle::geom_waffle()\nAdd ggwaffle::theme_waffle()\n\n\n\nlabs_waffle <- labs(\n  title = \"Waffle chart of palmer penguin species\",\n  x = \"\", y = \"\", fill = \"Species\")\nggp2_waffle <- ggplot(data = waffle_peng, \n       aes(x = x, \n           y = y, \n           fill = group)) + \n  ggwaffle::geom_waffle() \nggp2_waffle + \n  labs_waffle +\n  ggwaffle::theme_waffle()\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "amt/overlapping_bar_graphs.html",
    "href": "amt/overlapping_bar_graphs.html",
    "title": "Overlapping bar-graphs",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nRemove missing sex from penguins and filter to only \"Adelie\" penguins.\n\n\n\npenguins_ovrlp <- filter(penguins,\n                  !is.na(sex) & species == \"Adelie\")\nglimpse(penguins_ovrlp)\n\nRows: 146\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, 36.7, 39.3, 38.9, 39.2, 41.1, 38.6…\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, 19.3, 20.6, 17.8, 19.6, 17.6, 21.2…\n$ flipper_length_mm <int> 181, 186, 195, 193, 190, 181, 195, 182, 191, 198, 18…\n$ body_mass_g       <int> 3750, 3800, 3250, 3450, 3650, 3625, 4675, 3200, 3800…\n$ sex               <fct> male, female, female, female, male, female, male, fe…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap flipper_length_mm to the x and sex to fill\nAdd the geom_bar() layer\n\n\n\nlabs_bar_ovrlp <- labs(\n  title = \"Adelie adult foraging penguins\",\n  x = \"Flipper length (millimeters)\", \n  fill = \"Sex\")\nggp2_bar_ovrlp <- ggplot(data = penguins_ovrlp,\n          aes(x = flipper_length_mm, fill = sex)) +\n                geom_bar() \nggp2_bar_ovrlp + \n  labs_bar_ovrlp\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "amt/grouped_column_graphs.html",
    "href": "amt/grouped_column_graphs.html",
    "title": "Grouped column-graphs",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"ggplot2movies\")\nlibrary(ggplot2movies) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nRemove the missing values from budget and mpaa in the ggplot2movies::movies data.\nWe’ll also reduce the number of columns in the movies data for clarity.\n\n\n\nmovies_grp_col <- ggplot2movies::movies |> \n    filter(!is.na(budget) & mpaa != \"\") |> \n    select(budget, mpaa)\nglimpse(movies_grp_col)\n\nRows: 1,813\nColumns: 2\n$ budget <int> 23000000, 16000000, 1100000, 37000000, 85000000, 42000000, 4000…\n$ mpaa   <chr> \"PG-13\", \"PG-13\", \"R\", \"PG-13\", \"R\", \"R\", \"PG\", \"PG-13\", \"R\", \"…\n\n\n\n\n\n\n\nCodeGraphSummary\n\n\n\nCODE:\n\n\nCreate the labels\nMap mpaa to x and budget to y\nInside geom_col(), map mpaa to fill and remove the legend with show.legend = FALSE\nFormat the y axis with scale_y_continuous() by setting labels to scales::dollar\n\n\n\nlabs_col <- labs(\n  title = \"IMDB movie information/user ratings\",\n  x = \"MPAA rating\", \n  y = \"Total budget in US dollars\")\nggp2_col <- ggplot(data = movies_grp_col,\n              aes(x = mpaa, \n                  y = budget)) + \n        geom_col(aes(fill = mpaa), \n          show.legend = FALSE) + \n        scale_y_continuous(labels = scales::dollar) \nggp2_col + \n  labs_col\n\n\n\n\n\nGRAPH:\n\n\n\n\n\n\n\n\n\nSUMMARY:\n\n\nIf we pass a categorical variable to the x (like mpaa) and a continuous variable to y (like budget), geom_col() will calculate the sum() of y by levels of x\n\n\n\nggplot2movies::movies |>\n    filter(!is.na(budget) & mpaa != \"\") |>\n    select(budget, mpaa) |>\n    group_by(mpaa) |>\n    summarise(tot_bud = sum(budget, na.rm = TRUE),\n        tot_bud = scales::dollar(tot_bud)) |>\n    ungroup() |>\n    select(MPAA = mpaa,\n        `Total budget` = tot_bud)\n\n\n\nWe can see the underlying summary of budget using dplyr’s group_by() and summarise() functions.\n\n\n\n\n\n\n \n  \n    MPAA \n    Total budget \n  \n \n\n  \n    NC-17 \n    $48,637,000 \n  \n  \n    PG \n    $7,728,300,000 \n  \n  \n    PG-13 \n    $21,955,784,000 \n  \n  \n    R \n    $21,078,510,606"
  },
  {
    "objectID": "amt/more_heatmaps.html",
    "href": "amt/more_heatmaps.html",
    "title": "More heatmaps",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"fivethirtyeight\")\nlibrary(fivethirtyeight) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nWe’re going to use the same re-structured version of the fivethirtyeight::bob_ross data, heatmap_ross\n\n\n\nheatmap_ross <- fivethirtyeight::bob_ross |>\n  pivot_longer(-c(episode, season,\n    episode_num, title),\n    names_to = \"object\",\n    values_to = \"present\") |>\n  mutate(present = as.logical(present),\n    object = str_replace_all(object, \"_\", \" \")) |>\n  arrange(episode, object) |> \n  filter(object %in% c(\"conifer\", \"trees\", \n    \"tree\", \"snow\", \"palm trees\", \"grass\", \n    \"flowers\", \"cactus\", \"bushes\", \"cirrus\", \n    \"cumulus\", \"deciduous\", \"clouds\", \"fog\")) |>\n  group_by(season, object) |>\n  summarise(occurrences = sum(present)) |>\n  ungroup()\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nAssign season to x, object to y, and occurrences to fill\nAdd the geom_raster()\n\n\n\nlabs_heatmap_raster <- labs(\n  title = \"Bob Ross' plants & clouds\", \n  x = \"Season\", \n  y = \"Plant/Cloud Object\", \n  fill = \"Occurrences\")\nggp2_heatmap_raster <- ggplot(data = heatmap_ross, \n       aes(x = season, \n           y = object, \n           fill = occurrences)) + \n       geom_raster() \nggp2_heatmap_raster + \n  labs_heatmap_raster\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "amt/summarized_column_graphs.html",
    "href": "amt/summarized_column_graphs.html",
    "title": "Summarized column-graphs",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"ggplot2movies\")\nlibrary(ggplot2movies) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nRemove the missing values and reduce the ggplot2movies::movies dataset to only budget and mpaa, then group the data by mpaa and calculate the mean budget (as avg_budget).\n\n\n\nmovies_sum_col <- ggplot2movies::movies |>\n    filter(!is.na(budget) & mpaa != \"\") |>\n    select(budget, mpaa) |>\n    group_by(mpaa) |>\n    summarise(avg_budget = mean(budget, na.rm = TRUE)) |>\n    ungroup()\nglimpse(movies_sum_col)\n\nRows: 4\nColumns: 2\n$ mpaa       <chr> \"NC-17\", \"PG\", \"PG-13\", \"R\"\n$ avg_budget <dbl> 6948143, 36454245, 41426008, 19810630\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap mpaa to the x and avg_budget to the y\nMap mpaa to fill inside the aes() of geom_col() and remove the legend with show.lengend = FALSE\nFormat the y axis with scale_y_continuous() by setting labels to scales::dollar\n\n\n\nlabs_col <- labs(\n  title = \"IMDB movie information/user ratings\",\n  x = \"MPAA rating\", \n  y = \"Average budget in US dollars\")\nggp2_col <- ggplot(data = movies_sum_col,\n              aes(x = mpaa, \n                  y = avg_budget)) + \n        geom_col(aes(fill = mpaa), \n          show.legend = FALSE) + \n        scale_y_continuous(labels = scales::dollar) \nggp2_col + \n  labs_col\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "amt/heatmaps.html",
    "href": "amt/heatmaps.html",
    "title": "Heatmaps",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"fivethirtyeight\")\nlibrary(fivethirtyeight) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nFor the heatmap, we’re going to re-structure and filter the bob_ross data from the fivethirtyeight package.\n\n\n\nheatmap_ross <- fivethirtyeight::bob_ross |>\n  pivot_longer(-c(episode, season,\n    episode_num, title),\n    names_to = \"object\",\n    values_to = \"present\") |>\n  mutate(present = as.logical(present),\n    object = str_replace_all(object, \"_\", \" \")) |>\n  arrange(episode, object) |> \n  filter(object %in% c(\"conifer\", \"trees\", \n    \"tree\", \"snow\", \"palm trees\", \"grass\", \n    \"flowers\", \"cactus\", \"bushes\", \"cirrus\", \n    \"cumulus\", \"deciduous\", \"clouds\", \"fog\")) |>\n  group_by(season, object) |>\n  summarise(occurrences = sum(present)) |>\n  ungroup()\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nAssign season to x, object to y, and occurrences to fill\nAdd the geom_tile()\n\n\n\nlabs_heatmap_tile <- labs(\n  title = \"Bob Ross' plants & clouds\", \n  x = \"Season\", \n  y = \"Plant & Cloud Objects\", \n  fill = \"Occurrences\")\nggp2_heatmap_tile <- ggplot(data = heatmap_ross, \n       aes(x = season, \n           y = object, \n           fill = occurrences)) + \n       geom_tile() \nggp2_heatmap_tile + \n  labs_heatmap_tile\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "amt/dodge2_bar_graphs.html",
    "href": "amt/dodge2_bar_graphs.html",
    "title": "Side-to-side ('dodge2') bar-graphs",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nRemove any missing values from sex and species in the penguins data.\n\n\n\npenguins_dodge2 <- filter(penguins,\n                    !is.na(sex) & !is.na(species))\nglimpse(penguins_dodge2)\n\nRows: 333\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, 36.7, 39.3, 38.9, 39.2, 41.1, 38.6…\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, 19.3, 20.6, 17.8, 19.6, 17.6, 21.2…\n$ flipper_length_mm <int> 181, 186, 195, 193, 190, 181, 195, 182, 191, 198, 18…\n$ body_mass_g       <int> 3750, 3800, 3250, 3450, 3650, 3625, 4675, 3200, 3800…\n$ sex               <fct> male, female, female, female, male, female, male, fe…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraphCompare\n\n\n\nCODE:\n\n\nCreate the labels\nMap species to x and sex to fill\nInside geom_bar(), set position to \"dodge2\"\n\n\n\nlabs_bar_dodge2 <- labs(\n  title = \"Adelie adult foraging penguins\",\n  subtitle = \"position = 'dodge2'\",\n  x = \"Species\",\n  fill = \"Sex\")\nggp2_bar_dodge2 <- ggplot(data = penguins_dodge2,\n                      aes(x = species,\n                        fill = sex)) +\n                      geom_bar(position = \"dodge2\")\nggp2_bar_dodge2 +\n  labs_bar_dodge2\n\n\n\n\n\nGRAPH:\n\n\n\n\n\n\n\n\n\nCOMPARE:"
  },
  {
    "objectID": "amt/side_to_side_bar_graphs.html",
    "href": "amt/side_to_side_bar_graphs.html",
    "title": "Side-to-side ('dodge') bar-graphs",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nRemove any missing values from sex and species in the penguins data.\n\n\n\npenguins_dodge <- filter(penguins,\n                    !is.na(sex) & !is.na(species))\nglimpse(penguins_dodge)\n\nRows: 333\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, 36.7, 39.3, 38.9, 39.2, 41.1, 38.6…\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, 19.3, 20.6, 17.8, 19.6, 17.6, 21.2…\n$ flipper_length_mm <int> 181, 186, 195, 193, 190, 181, 195, 182, 191, 198, 18…\n$ body_mass_g       <int> 3750, 3800, 3250, 3450, 3650, 3625, 4675, 3200, 3800…\n$ sex               <fct> male, female, female, female, male, female, male, fe…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap species to the x and sex to fill\nInside the geom_bar() function, set position to \"dodge\"\n\n\n\nlabs_bar_dodge <- labs(\n  title = \"Adult foraging penguins\",\n  subtitle = \"position = 'dodge'\",\n  x = \"Penguin Species\",\n  fill = \"Penguin Sex\")\n\nggp2_bar_dodge <- ggplot(data = penguins_dodge,\n                    aes(x = species,\n                      fill = sex)) +\n                    geom_bar(position = \"dodge\")\nggp2_bar_dodge +\n  labs_bar_dodge\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "dist/ridgeline_plots.html",
    "href": "dist/ridgeline_plots.html",
    "title": "Ridgeline Plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nRemove missing island from penguins\n\n\n\npeng_ridges <- filter(penguins, !is.na(island))\nglimpse(peng_ridges)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap bill_length_mm to the x axis\nMap island to the y axis and fill\nAdd the ggridges::geom_density_ridges() layer (with alpha set to 2/3)\nRemove the legend with show.legend = FALSE\n\n\n\nlabs_ridges <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Bill length (millimeters)\",\n  y = \"Island\", fill = \"Island\")\nggp2_ridges <- ggplot(data = peng_ridges,\n       aes(x = bill_length_mm, \n           y = island, \n        fill = island)) +\n  ggridges::geom_density_ridges(alpha = 2/3, \n      show.legend = FALSE)\nggp2_ridges + \n  labs_ridges\n\n\n\n\n\nGRAPH:\n\n\nRidgeline plots are excellent for comparing continuous distributions across groups."
  },
  {
    "objectID": "dist/bee_swarm_plots.html",
    "href": "dist/bee_swarm_plots.html",
    "title": "Bee-swarm Plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ndevtools::install_github(\"eclarke/ggbeeswarm\")\nlibrary(ggbeeswarm)\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nThe penguins data.\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap island to the x axis and color\nMap body_mass_g to the y axis\nAdd the ggbeeswarm::geom_beeswarm() layer (with alpha)\n\n\n\nlabs_beeswarm <- labs(\n  title = \"Adult Foraging Penguins\",\n  x = \"Penguin Species\",\n  y = \"Body mass (grams)\")\nggp2_beeswarm <- ggplot(data = penguins, \n       aes(x = species, \n           y = body_mass_g, \n           color = species)) + \n  ggbeeswarm::geom_beeswarm(\n      alpha = 2/3, \n    show.legend = FALSE) \nggp2_beeswarm + \n  labs_beeswarm\n\n\n\n\n\nGRAPH:\n\n\nAdjust the size/shape of the swarm using method = or the geom_quasirandom() function from ggbeeswarm"
  },
  {
    "objectID": "dist/grouped_violin_plots.html",
    "href": "dist/grouped_violin_plots.html",
    "title": "Grouped Violin-Plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nRemove missing island from penguins\n\n\n\npeng_violin <- filter(penguins, !is.na(island))\nglimpse(peng_violin)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap island to the x, bill_length_mm to the y, and island to fill\nSet alpha to 2/3\nRemove the legend with show.legend = FALSE\n\n\n\nlabs_grp_violin <- labs(\n  title = \"Adult foraging penguins\", \n  subtitle = \"Palmer Archipelago, Antarctica\",\n  x = \"Island\", fill = \"Island\",\n  y = \"Bill length (millimeters)\")\nggp2_grp_violin <- ggplot(data = peng_violin,\n       aes(x = island, \n           y = bill_length_mm, \n        fill = island)) +\n  geom_violin(alpha = 2/3, \n      show.legend = FALSE) \nggp2_grp_violin + \n  labs_grp_violin\n\n\n\n\n\nGRAPH:\n\n\nViolin plots can allow us to compare the ‘center’ and ‘spread’ of continuous variables across categorical groups."
  },
  {
    "objectID": "dist/grouped_box_plots.html",
    "href": "dist/grouped_box_plots.html",
    "title": "Grouped Box-plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nRemove the missing island values from the penguins data.\n\n\n\npeng_box <- filter(penguins, !is.na(island))\nglimpse(peng_box)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap island to the x axis and to fill\nMap bill_length_mm to the y axis\nAdd geom_boxplot() and set the alpha to 2/3\nRemove the legend with show.legend = FALSE\n\n\n\nlabs_grp_boxplots <- labs(\n  title = \"Adult foraging penguins\", \n  subtitle = \"Palmer Archipelago, Antarctica\",\n  x = \"Island\", fill = \"Island\",\n  y = \"Bill length (millimeters)\")\nggp2_grp_boxplots <- ggplot(data = peng_box,\n       aes(x = island, \n           y = bill_length_mm, \n        fill = island)) +\n  geom_boxplot(alpha = 2/3, \n      show.legend = FALSE) \nggp2_grp_boxplots + \n  labs_grp_boxplots\n\n\n\n\n\nGRAPH:\n\n\nWhen a categorical variable is supplied, the plot will contain a box for each level or group."
  },
  {
    "objectID": "dist/overlapping_frequency_polygons.html",
    "href": "dist/overlapping_frequency_polygons.html",
    "title": "Overlapping Frequency Polygons",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nThe penguins data.\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap flipper_length_mm to the x and species to group\nMap species to the color aesthetic inside the geom_freqpoly()\n\n\n\nlabs_ovrlp_freq_poly <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Flipper length (millimeters)\",\n  color = \"Species\")\nggp2_ovrlp_freq_poly <- ggplot(data = penguins, \n       aes(x = flipper_length_mm,\n           group = species)) + \n  geom_freqpoly(aes(color = species))\nggp2_ovrlp_freq_poly + \n  labs_ovrlp_freq_poly\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "dist/overlapping_histograms.html",
    "href": "dist/overlapping_histograms.html",
    "title": "Overlapping Histograms",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nThe penguins data\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap flipper_length_mm to the x axis and species to fill\nSet alpha to 2/3 inside geom_histogram()\n\n\n\nlabs_ovrlp_hist <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Flipper length (millimeters)\", \n  fill = \"Species\")\nggp2_ovrlp_hist <- ggplot(data = penguins,\n     aes(x = flipper_length_mm, \n         fill = species)) + \n     geom_histogram(alpha = 2/3) \nggp2_ovrlp_hist + \n  labs_ovrlp_hist\n\n\n\n\n\nGRAPH:\n\n\nHistograms work by dividing the variable provided to x into bins and counting the number of observations in each bin.\nExperiment with different binwidths when comparing distributions across groups."
  },
  {
    "objectID": "dist/raincloud_plots.html",
    "href": "dist/raincloud_plots.html",
    "title": "Raincloud Plots",
    "section": "",
    "text": "Graph info\n\n\n\n\n\n\nWhen would I use this graph?\n\n\n\n\n\n\n\n\n\n\n\nRaincloud plots are a combination of density graph, a box-plot, and a beeswarm (or jitter) plot, and are used to compare distributions of quantitative/numerical variables across the levels of a categorical (or discrete) grouping variable.\nThe user-written package for creating raincloud plots (raincloudplots), or they can be built using the ggdist and package and geoms from ggplot2."
  },
  {
    "objectID": "dist/raincloud_plots.html#raincloudplots",
    "href": "dist/raincloud_plots.html#raincloudplots",
    "title": "Raincloud Plots",
    "section": "raincloudplots",
    "text": "raincloudplots\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nUse the raincloudplots::raincloud_1x1() to build the plot, assigning peng_1x1 to data_1x1\n- assign colors and fills\n- set the size (of the points) and alpha (for opacity)\n\n\n\nggp2_raincloud <- raincloudplots::raincloud_1x1(\n    data_1x1 = peng_1x1,\n    colors = (c('#0bd3d3', '#f890e7')),\n    fills = (c('#0bd3d3', '#f890e7')),\n    size = 0.8,\n    alpha = 3/4,\n    ort = 'h'\n) \n\nggp2_raincloud_x <- ggp2_raincloud +\n    ggplot2::scale_x_continuous(\n        breaks = c(1, 2),\n        labels = c(\"2008\", \"2009\"),\n        limits = c(0, 3))\n\nggp2_raincloud_x + \n    ggplot2::labs(title = \"Flipper length of Palmer penguins\",\n        subtitle = \"Years 2008 & 2009\", \n         x = \"Year\", y = \"Flipper length (mm)\")\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "dist/raincloud_plots.html#raincloud-plots-layer-by-layer",
    "href": "dist/raincloud_plots.html#raincloud-plots-layer-by-layer",
    "title": "Raincloud Plots",
    "section": "Raincloud plots (layer-by-layer)",
    "text": "Raincloud plots (layer-by-layer)\n\nDataBox-plotDensityPoints\n\n\n\nDATA:\n\n\nWe’ll use the peng_raincloud data (with the missing values removed from species and body_mass_g).\n\n\n\n# remove missing\npeng_raincloud <- palmerpenguins::penguins |> \n    filter(!is.na(species) & !is.na(body_mass_g))\nglimpse(peng_raincloud)\n\nRows: 342\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, 36.7, 39.3, 38.9, 39.2, 34.1, 42.0…\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, 19.3, 20.6, 17.8, 19.6, 18.1, 20.2…\n$ flipper_length_mm <int> 181, 186, 195, 193, 190, 181, 195, 193, 190, 186, 18…\n$ body_mass_g       <int> 3750, 3800, 3250, 3450, 3650, 3625, 4675, 3475, 4250…\n$ sex               <fct> male, female, female, female, male, female, male, NA…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\nggplot2::geom_boxplot()\n\n\nCreate the labels\nFor the first layer, we create a box-plot with geom_boxplot(), but include notches and removing the outliers.\n\n\n\nlabs_raincloud_2 <- ggplot2::labs(\n    title = \"Flipper length of Palmer penguins\",\n         x = \"Species\", y = \"Flipper length (mm)\")\nggp2_box <- ggplot(peng_raincloud,\n    aes( x = flipper_length_mm, y = species)) + \n  geom_boxplot(aes(fill = species),\n    notch = TRUE, \n    notchwidth = 0.9,\n    width = .15, \n    outlier.shape = NA)\nggp2_box + \n    labs_raincloud_2\n\n\n\n\n\n\n\n\nggdist::stat_halfeye()\n\n\nWe then add the density with a ggdist::stat_halfeye() layer, mapping species to fill, and adjusting the size and shape of the density curve and shifting it slightly above the box-plot.\n\n\n\nggp2_stat_halfeye <- ggp2_box +\n  ggdist::stat_halfeye(aes(fill = species),\n    adjust = 0.6, # shape = adjust * density estimator\n    .width = 0, # can use probabilities or 0\n    point_colour = NA, # removes the point in center\n    orientation = \"horizontal\", # like the box-plot\n    height = 0.5, # height of curve\n    justification = -0.3 # shift vertically above box\n) \nggp2_stat_halfeye + \n    labs_raincloud_2\n\n\n\n\n\n\n\n\nggplot2::geom_point()\n\n\nThe final layer is a geom_point(), mapping fill to species and setting position to position_jitter(). Additional adjustments to the points include:\n\nUsing shape = 21, we can color the outside of the point (white makes it appear to glow).\nManually set the height, which refers to the vertical area for the points\nRemove the legend for the entire graph with theme(legend.position = \"none\")\n\n\n\n\nggp2_jitter <- ggp2_stat_halfeye + \n    geom_point(aes(fill = species),\n        shape = 21, \n        color = \"#ffffff\", \n        alpha = 1/3, size = 1.8,\n    position = position_jitter(\n      seed = 321, \n      height = .07)) + \n    theme(legend.position = \"none\")\nggp2_jitter + \n    labs_raincloud_2"
  },
  {
    "objectID": "dist/raincloud_plots.html#even-more-rainclouds",
    "href": "dist/raincloud_plots.html#even-more-rainclouds",
    "title": "Raincloud Plots",
    "section": "Even more Rainclouds!",
    "text": "Even more Rainclouds!\n\nMore examples#TidyTuesday exampleMore resources\n\n\n\nCédric Scherer covered raincloud plots in this great write-up for #TidyTuesday.\nCédric also covers some alternative methods for plotting the points (I particularly like using bands instead of points when displaying the rainclouds vertically).\nWe can switch to this layout by applying ggplot2::coord_flip() to the ggp2_stat_halfeye layer, then adding geom_point() with shape set to 95\n\n\n\nggp2_stat_halfeye + \n    ggplot2::coord_flip() + \nggplot2::geom_point(\n    shape = 95,\n    size = 8,\n    alpha = .2\n  ) + \n    theme(legend.position = \"none\") + \n    labs_raincloud_2\n\n\n\n\n\n\n\n\nPolished Graph\n\n\nThe code to re-create the #TidyTuesday graph is contained in this gist.\n\n\n\n\n\n\n\n\n\nRead more\n\n\nRaincloud plots: a multi-platform tool for robust data visualization\nShape and point sizes in R\nRainCloudPlots package on GitHub"
  },
  {
    "objectID": "dist/overlapping_dot_plots.html",
    "href": "dist/overlapping_dot_plots.html",
    "title": "Overlapping Dot-Plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nRemove missing sex from penguins\n\n\n\npeng_dotplot <- filter(penguins, !is.na(sex))\nglimpse(peng_dotplot)\n\nRows: 333\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, 36.7, 39.3, 38.9, 39.2, 41.1, 38.6…\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, 19.3, 20.6, 17.8, 19.6, 17.6, 21.2…\n$ flipper_length_mm <int> 181, 186, 195, 193, 190, 181, 195, 182, 191, 198, 18…\n$ body_mass_g       <int> 3750, 3800, 3250, 3450, 3650, 3625, 4675, 3200, 3800…\n$ sex               <fct> male, female, female, female, male, female, male, fe…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap flipper_length_mm to x\nMap species to fill (inside factor())\nInside geom_dotplot, set method to \"histodot\", binwidth to 1.5, and binpositions to \"all\"\n\n\n\nlabs_ovrlp_dotplot <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Flipper length (millimeters)\",\n  fill = \"Species\")\nggp2_ovrlp_dotplot <- ggplot(data = peng_dotplot, \n    aes(x = flipper_length_mm,\n        fill = factor(species))) +\n  geom_dotplot(\n    method = \"histodot\",\n    binwidth = 1.5,\n    binpositions = \"all\")\nggp2_ovrlp_dotplot + \n  labs_ovrlp_dotplot\n\n\n\n\n\nGRAPH:\n\n\n\nbinwidth = When method is “histodot”, this specifies bin width. Defaults to 1/30 of the range of the data\nbinpositions = “all” determines positions of the bins with all the data taken together; this is used for aligning dot stacks across multiple groups."
  },
  {
    "objectID": "dist/overlapping_stacked_density_plots.html",
    "href": "dist/overlapping_stacked_density_plots.html",
    "title": "Overlapping Densities",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nRemove missing sex from the penguins data\n\n\n\npeng_density <- filter(penguins, !is.na(sex))\nglimpse(peng_density)\n\nRows: 333\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, 36.7, 39.3, 38.9, 39.2, 41.1, 38.6…\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, 19.3, 20.6, 17.8, 19.6, 17.6, 21.2…\n$ flipper_length_mm <int> 181, 186, 195, 193, 190, 181, 195, 182, 191, 198, 18…\n$ body_mass_g       <int> 3750, 3800, 3250, 3450, 3650, 3625, 4675, 3200, 3800…\n$ sex               <fct> male, female, female, female, male, female, male, fe…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap the flipper_length_mm to the x and sex to fill\nAdd the geom_density()\nSet the alpha to 1/3 (to handle the overlapping areas)\n\n\n\nlabs_ovrlp_density <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Flipper length (millimeters)\",\n  fill = \"Sex\")\nggp2_ovrlp_density <- ggplot(data = peng_density, \n       aes(x = flipper_length_mm, \n           fill = sex)) +\n      geom_density(alpha = 1/3) \nggp2_ovrlp_density + \n  labs_ovrlp_density\n\n\n\n\n\nGRAPH:\n\n\nA downside of density plots is the lack of interpretability of the y axis\nMake density area slightly transparent to handle over-plotting.\n\n\n\n\n\n\n\n\n\n\nSTACKED DENSITY PLOTS\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap the flipper_length_mm to the x, add after_stat(count), and map sex to fill\nInside geom_density(), set position to \"stack\"\nSet the alpha to 1/3\n\n\n\nlabs_stack_density <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Flipper length (millimeters)\", \n  fill = \"Sex\")\nggp2_stack_density <- ggplot(data = peng_density, \n       aes(x = flipper_length_mm, \n           after_stat(count),\n           fill = sex)) +\n      geom_density(position = \"stack\", \n                   alpha = 1/3) \nggp2_stack_density + \n  labs_stack_density\n\n\n\n\n\nGRAPH:\n\n\nAdding after_stat(count) uses the density * n instead of the default density which ‘preserves marginal densities’."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Overview",
    "section": "",
    "text": "Welcome to the ggplot2 graph gallery! This Quarto website contains a series of graphs composed in ggplot2. Install ggplot2 using the code below:\nOr install ggplot2 as part of the tidyverse:"
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "Overview",
    "section": "Data",
    "text": "Data\nAn effort has been made to keep the number of additional packages at a minimum, so most of the graphs have been created with one of two datasets:\n\npenguins\n\n\n\n\n\nThe majority of the graphs are built using the palmerpenguins::penguins data.\n\n\n\n\n\n\npenguins data\n\n\n\n\n\n\n\nView code\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\npalmerpenguins::penguins |> glimpse()\n\n\n\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nmovies\n\n\n\n\n\nSome of the graphs are built using the ggplot2movies::movies data.\n\n\n\n\n\n\nmovies data\n\n\n\n\n\n\n\nView code\ninstall.packages(\"ggplot2movies\")\nlibrary(ggplot2movies)\nggplot2movies::movies |> glimpse()\n\n\n\n\nRows: 58,788\nColumns: 24\n$ title       <chr> \"$\", \"$1000 a Touchdown\", \"$21 a Day Once a Month\", \"$40,0…\n$ year        <int> 1971, 1939, 1941, 1996, 1975, 2000, 2002, 2002, 1987, 1917…\n$ length      <int> 121, 71, 7, 70, 71, 91, 93, 25, 97, 61, 99, 96, 10, 10, 10…\n$ budget      <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ rating      <dbl> 6.4, 6.0, 8.2, 8.2, 3.4, 4.3, 5.3, 6.7, 6.6, 6.0, 5.4, 5.9…\n$ votes       <int> 348, 20, 5, 6, 17, 45, 200, 24, 18, 51, 23, 53, 44, 11, 12…\n$ r1          <dbl> 4.5, 0.0, 0.0, 14.5, 24.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4…\n$ r2          <dbl> 4.5, 14.5, 0.0, 0.0, 4.5, 4.5, 0.0, 4.5, 4.5, 0.0, 0.0, 0.…\n$ r3          <dbl> 4.5, 4.5, 0.0, 0.0, 0.0, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5…\n$ r4          <dbl> 4.5, 24.5, 0.0, 0.0, 14.5, 14.5, 4.5, 4.5, 0.0, 4.5, 14.5,…\n$ r5          <dbl> 14.5, 14.5, 0.0, 0.0, 14.5, 14.5, 24.5, 4.5, 0.0, 4.5, 24.…\n$ r6          <dbl> 24.5, 14.5, 24.5, 0.0, 4.5, 14.5, 24.5, 14.5, 0.0, 44.5, 4…\n$ r7          <dbl> 24.5, 14.5, 0.0, 0.0, 0.0, 4.5, 14.5, 14.5, 34.5, 14.5, 24…\n$ r8          <dbl> 14.5, 4.5, 44.5, 0.0, 0.0, 4.5, 4.5, 14.5, 14.5, 4.5, 4.5,…\n$ r9          <dbl> 4.5, 4.5, 24.5, 34.5, 0.0, 14.5, 4.5, 4.5, 4.5, 4.5, 14.5,…\n$ r10         <dbl> 4.5, 14.5, 24.5, 45.5, 24.5, 14.5, 14.5, 14.5, 24.5, 4.5, …\n$ mpaa        <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"R\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"…\n$ Action      <int> 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0…\n$ Animation   <int> 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1…\n$ Comedy      <int> 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1…\n$ Drama       <int> 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0…\n$ Documentary <int> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0…\n$ Romance     <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Short       <int> 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1…\n\n\n\n\n\n\n\nAdditional datasets\nA few of the graphs using datasets from the fivethirtyeight package.\n\n\n\n\n\n\n\n\n\n\n\nfivethirtyeight data\n\n\n\n\n\nTo view a table of available datasets in the fivethirtyeight package, view the Data Frame Name and Article Title columns in the datasets_master table.\n\n\nView code\ninstall.packages(\"fivethirtyeight\")\nlibrary(fivethirtyeight)\nfivethirtyeight::datasets_master |> \n    select(`Data Frame Name`, `Article Title`)"
  },
  {
    "objectID": "index.html#graph-packages",
    "href": "index.html#graph-packages",
    "title": "Overview",
    "section": "Graph Packages",
    "text": "Graph Packages\nMost of the graphs in this gallery can be built using on of ggplot2 ’s many geom_* functions. If a graph requires additional geoms or functions, the development version for these packages have been listed."
  },
  {
    "objectID": "index.html#univariate-graphs",
    "href": "index.html#univariate-graphs",
    "title": "Overview",
    "section": "Univariate Graphs",
    "text": "Univariate Graphs\nThe following graphs are used to display single variable distributions:\n\nBar Graphs\nHistograms\nFrequency Polygons\nDot-Plots\nDensity Plots\nViolin Plots\nBox-Plots"
  },
  {
    "objectID": "index.html#comparing-amounts",
    "href": "index.html#comparing-amounts",
    "title": "Overview",
    "section": "Comparing Amounts",
    "text": "Comparing Amounts\nThe following graphs are used to display amounts:\n\nGrouped column-graphs\nSummarized column-graphs\nOverlapping bar-graphs\nSide-to-side (\"dodge\") bar-graphs\nSide-to-side (\"dodge2\") bar-graphs\nWaffle charts\nggwaffle package\n\n\nView code\n# Waffle Charts\ndevtools::install_github(\"liamgilbey/ggwaffle\")\nlibrary(ggwaffle)\n\n\n\nHeatmaps"
  },
  {
    "objectID": "index.html#comparing-proportions",
    "href": "index.html#comparing-proportions",
    "title": "Overview",
    "section": "Comparing Proportions",
    "text": "Comparing Proportions\nThe following graphs are used to compare proportions:\n\nPie Charts\nggpubr package\n\n\nView code\n# Pie Charts \ndevtools::install_github(\"kassambara/ggpubr\")\nlibrary(ggpubr)\n\n\n\nDiverging Bar-graphs\nVertical\nStacked-densities\nMosaic Plots\nggmosaic package\n\n\nView code\n# Mosaic Charts \ndevtools::install_github(\"haleyjeppson/ggmosaic\")\nlibrary(ggmosaic)\n\n\n\nTreemaps\ntreemapify package\n\n\nView code\n# Treemaps\ndevtools::install_github(\"wilkox/treemapify\")\nlibrary(treemapify)"
  },
  {
    "objectID": "index.html#comparing-distributions",
    "href": "index.html#comparing-distributions",
    "title": "Overview",
    "section": "Comparing Distributions",
    "text": "Comparing Distributions\nThese graphs can be used to compare multiple variable distributions:\n\nOverlapping Histograms\nOverlapping Frequency Polygons\nOverlapping Dot-Plots\nBee-swarm Plots\nggbeeswarm package\n\n\nView code\n# Bee-swarm Plots\ndevtools::install_github(\"eclarke/ggbeeswarm\")\nlibrary(ggbeeswarm)\n\n\n\nOverlapping Densities\nRidgeline Plots\nggridges package\n\n\nView code\n# Ridgeline plots \ndevtools::install_github(\"wilkelab/ggridges\")\nlibrary(ggridges)\n\n\n\nGrouped Box-plots\nViolin plots\nRain-cloud plots\nraincloudplots and ggdist packages\n\n\nView code\n# Rain-cloud plots \nremotes::install_github('jorvlan/raincloudplots')\nremotes::install_github('mjskay/ggdist')\nlibrary(raincloudplots)\nlibrary(ggdist)"
  },
  {
    "objectID": "index.html#relationships",
    "href": "index.html#relationships",
    "title": "Overview",
    "section": "Relationships",
    "text": "Relationships\nThe following graphs are used to display relationships between two (or more) variables:\n\nScatter plots\nGrouped scatter plots\nBubble charts\nGrouped bubble charts\nAlluvial charts\nggalluvial package\n\n\nView code\n# Alluvial charts\ndevtools::install_github(\"corybrunson/ggalluvial\")\nlibrary(ggalluvial)\n\n\n\nBump charts\nggbump package\n\n\nView code\n# Bump charts\ndevtools::install_github(\"davidsjoberg/ggbump\")\nlibrary(ggbump)\n\n\n\nParallel Sets\nggforce package\n\n\nView code\n# Bump charts\ndevtools::install_github(\"thomasp85/ggforce\")\nlibrary(ggforce)\n\n\n\nSlope-graphs\nDensity Contours\n2D Bins\nHex Bins\nCorrelograms"
  },
  {
    "objectID": "uni/frequency_polygons.html",
    "href": "uni/frequency_polygons.html",
    "title": "Frequency Polygons",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nThe penguins data\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap flipper_length_mm to the x axis\nAdd the geom_freqpoly() layer\n\n\n\nlabs_freqpoly <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Flipper length (millimeters)\")\nggp2_freqpoly <- ggplot(data = penguins,\n      aes(x = flipper_length_mm)) + \n    geom_freqpoly()\nggp2_freqpoly + \n  labs_freqpoly\n\n\n\n\n\nGRAPH:\n\n\nGRAPH: Experiment to see how many bins fit your variable’s distribution"
  },
  {
    "objectID": "uni/histograms.html",
    "href": "uni/histograms.html",
    "title": "Histograms",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nThe penguins data.\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nAssign flipper_length_mm to the x\nAdd the geom_histogram()\nAdjust the bins accordingly\n\n\n\nlabs_histogram <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Flipper length (millimeters)\")\n\nggp2_hist <- ggplot(data = penguins,\n     aes(x = flipper_length_mm)) + \n     geom_histogram() \nggp2_hist + \n  labs_histogram\n\n\n\n\n\nGRAPH:\n\n\nThe standard number of bins is 30, but ‘you should always override this value, exploring multiple widths to find the best to illustrate the stories in your data.’"
  },
  {
    "objectID": "uni/dot_plots.html",
    "href": "uni/dot_plots.html",
    "title": "Dot-plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nThe penguins data\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap flipper_length_mm to the x axis\nAdd the geom_dotplot() layer\nAdjust the dotsize\n\n\n\nlabs_dotplot <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Flipper length (millimeters)\")\nggp2_dotplot <- ggplot(data = penguins,\n      aes(x = flipper_length_mm)) + \n    geom_dotplot(dotsize = 0.5) \nggp2_dotplot + \n  labs_dotplot\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "uni/density_plots.html",
    "href": "uni/density_plots.html",
    "title": "Density Plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nThe penguins data.\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap flipper_length_mm to the x axis\nAdd the geom_density() layer\n\n\n\nlabs_density <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Flipper length (millimeters)\")\nggp2_density <- ggplot(data = penguins, \n        aes(x = flipper_length_mm)) + \n      geom_density() \n\nggp2_density +\n  labs_density\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "uni/box_plots.html",
    "href": "uni/box_plots.html",
    "title": "Box-Plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"ggplot2movies\")\nlibrary(ggplot2movies) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nFilter ggplot2movies::movies to only include films after the made after 2000, and remove missing values from mpaa and budget.\n\n\n\nmovies_box <- ggplot2movies::movies |> \n                dplyr::filter(year > 2000 & \n                                mpaa != \"\" & \n                                    !is.na(budget))\nglimpse(movies_box)\n\nRows: 838\nColumns: 24\n$ title       <chr> \"100 Mile Rule\", \"13 Going On 30\", \"15 Minutes\", \"2 Fast 2…\n$ year        <int> 2002, 2004, 2001, 2003, 2004, 2003, 2002, 2002, 2001, 2002…\n$ length      <int> 98, 98, 120, 107, 129, 124, 135, 113, 125, 96, 99, 92, 110…\n$ budget      <int> 1100000, 37000000, 42000000, 76000000, 12000000, 20000000,…\n$ rating      <dbl> 5.6, 6.4, 6.1, 5.1, 7.6, 8.0, 7.8, 7.3, 5.4, 5.4, 6.8, 6.1…\n$ votes       <int> 181, 7859, 10866, 9556, 2663, 21857, 15788, 24174, 7298, 8…\n$ r1          <dbl> 4.5, 4.5, 4.5, 14.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.…\n$ r2          <dbl> 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5…\n$ r3          <dbl> 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5…\n$ r4          <dbl> 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5…\n$ r5          <dbl> 14.5, 4.5, 14.5, 14.5, 4.5, 4.5, 4.5, 4.5, 14.5, 14.5, 4.5…\n$ r6          <dbl> 24.5, 14.5, 24.5, 14.5, 4.5, 4.5, 4.5, 14.5, 14.5, 24.5, 1…\n$ r7          <dbl> 14.5, 24.5, 24.5, 14.5, 14.5, 14.5, 14.5, 24.5, 14.5, 24.5…\n$ r8          <dbl> 14.5, 14.5, 14.5, 4.5, 24.5, 24.5, 34.5, 24.5, 14.5, 4.5, …\n$ r9          <dbl> 4.5, 4.5, 4.5, 4.5, 14.5, 24.5, 24.5, 14.5, 4.5, 4.5, 4.5,…\n$ r10         <dbl> 14.5, 14.5, 4.5, 4.5, 24.5, 14.5, 14.5, 14.5, 4.5, 4.5, 14…\n$ mpaa        <chr> \"R\", \"PG-13\", \"R\", \"PG-13\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", …\n$ Action      <int> 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1…\n$ Animation   <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Comedy      <int> 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1…\n$ Drama       <int> 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0…\n$ Documentary <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Romance     <int> 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Short       <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\n\nAssign a blank character string (\"\") to the x axis in labs()\n\nMap length to the y axis and an empty string (\"\") to the x axis\nAdd the geom_boxplot() layer\n\n\n\nlabs_boxplot <- labs(\n  title = \"IMDB Movie information and user ratings\",\n  y = \"Length\", x = \"\")\nggp2_boxplot <- ggplot(data = movies_box, \n           aes(x = \" \", \n               y = length)) +\n        geom_boxplot() \n\nggp2_boxplot + \n  labs_boxplot\n\n\n\n\n\nGRAPH:\n\n\n\n\n\n\n\n\n\n\nMORE ON BOX-PLOTS\n\nSummary StatisticsHow to read a box-plotCompare\n\n\n\nThe table below shows the 25th percentile, the median, the 75th percentile, the IQR, and a histogram of the length column from the movies_box dataset.\n\n\n\n\n\n\n \n  \n    25th \n    Median \n    75th \n    IQR \n    Histogram \n  \n \n\n  \n    92 \n    100 \n    113 \n    21 \n    ▁▇▅▁▁ \n  \n\n\n\n\n\n\n\n\n\nIn the figure below we can see how the box-plot represents each of these numbers using lines and points.\n\n\n\n\n\n\n\nIn ggplot2, values that fall more than 1.5 times the IQR are displayed as individual points (aka outliers). The lines extending from the bottom and top of the main box represent the last non-outlier value in the distribution.\n\n\n\n\nCompare the four graphs of length from movie_box below to the box-plot:"
  },
  {
    "objectID": "uni/violin_plot.html",
    "href": "uni/violin_plot.html",
    "title": "Violin Plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nThe penguins data.\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\n\nPlace an empty string (\"\") in the x argument\n\nMap and empty string (\"\") to the x and bill_length_mm to the y\nAdd geom_violin()\n\n\n\nlabs_violin <- labs(\n  title = \"Adult foraging penguins\",\n  subtitle = \"Distribution of bill length\",\n  x = \"\",\n  y = \"Bill length (millimeters)\")\nggp2_violin <- ggplot(data = penguins,\n       aes(x = '', \n           y = bill_length_mm)) +\n       geom_violin() \nggp2_violin + \n  labs_violin\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "uni/bar_graphs.html",
    "href": "uni/bar_graphs.html",
    "title": "Bar-graphs",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nFilter the missing values from species in the palmerpenguins::penguins data\n\n\n\npenguins_bar <- palmerpenguins::penguins |> \n    filter(!is.na(species))\nglimpse(penguins_bar)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap species to the x axis\nMap species to the fill aesthetic inside the aes() of geom_bar()\nRemove the legend with show.legend = FALSE\n\n\n\nlabs_bar <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Species\", y = \"Count\", \n  fill = \"Species\")\nggp2_bar <- ggplot(data = penguins_bar,\n       aes(x = species)) +\n    geom_bar(aes(fill = species), \n        show.legend = FALSE)\nggp2_bar +\n  labs_bar\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "rela/scatter_plot.html",
    "href": "rela/scatter_plot.html",
    "title": "Scatter-Plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nThe penguins data\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap bill_length_mm to the x axis\nMap flipper_length_mm to the y axis\nAdd geom_point()\n\n\n\nlabs_scatter <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\", y = \"Flipper length (mm)\")\nggp2_scatter <- penguins |>\n  ggplot(\n    aes(x = bill_length_mm, \n      y = flipper_length_mm)) +\n  geom_point()\n\nggp2_scatter + \n  labs_scatter\n\n\n\n\n\nGRAPH:\n\n\nIf multiple points occupy the same value position, use transparency (alpha) to improve visibility."
  },
  {
    "objectID": "rela/bubble_charts.html",
    "href": "rela/bubble_charts.html",
    "title": "Bubble Charts",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\n# install.packages(\"palmerpenguins\")\n# library(palmerpenguins) \n# library(ggplot2)\n\n\n\n\n\nDATA:\n\n\nThe penguins data\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap bill_length_mm to x axis\nMap flipper_length_mm to y axis\nMap body_mass_g to size\nSet alpha to 1/3\nAdd scale_size(), set the range to c(0.1, 10) and name to \"Body Mass (g)\"\nMove the legend to the bottom of the graph with theme(legend.position = \"bottom\")\n\n\n\nlabs_bubble <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\", y = \"Flipper length (mm)\", \n  size = \"Body Mass (g)\")\n\nggp2_bubble <- penguins |> \n  ggplot(\n    aes(x = bill_length_mm, y = flipper_length_mm)) + \n  geom_point(aes(size = body_mass_g), alpha = 1/3) + \n  scale_size(range = c(.1, 10), \n             name = \"Body Mass (g)\") + \n  theme(legend.position = \"bottom\")\n\nggp2_bubble + \n  labs_bubble\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "rela/alluvial_charts.html",
    "href": "rela/alluvial_charts.html",
    "title": "Alluvial Charts",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ndevtools::install_github(\"corybrunson/ggalluvial\")\nlibrary(ggalluvial)\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nBelow we create a wide example of the penguins data (as peng_wide)\n\n\n\npeng_wide <- penguins |> \n  drop_na() |> \n  count(year, island, sex, species) |> \n  mutate(year = factor(year)) |> \n  rename(freq = n)\nglimpse(peng_wide)\n\nRows: 30\nColumns: 5\n$ year    <fct> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 20…\n$ island  <fct> Biscoe, Biscoe, Biscoe, Biscoe, Dream, Dream, Dream, Dream, To…\n$ sex     <fct> female, female, male, male, female, female, male, male, female…\n$ species <fct> Adelie, Gentoo, Adelie, Gentoo, Adelie, Chinstrap, Adelie, Chi…\n$ freq    <int> 5, 16, 5, 17, 9, 13, 10, 13, 8, 7, 9, 22, 9, 23, 8, 9, 8, 9, 8…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels (with ggtitle(), ylab(), and labs())\nAdd scale_x_discrete() with the limits set to \"Year\", \"Island\" and \"Species\", and expand to 0.1 and 0.07\nAdd geom_alluvium() with fill set to the sex variable and geom_stratum()\nAdd geom_text(), with stat set to stratum and label set to after_stat(stratum) (inside aes())\n\n\n\nlabs_alluvial <- ggtitle(label = \"Palmer Penguins\", \n    subtitle = \"Stratified by year, island and species\")\nlabs_alluvial_y <- ylab(\"Frequency\") \nlabs_alluvial_fill <- labs(fill = \"Sex\")\n\nggp2_alluvial_w <- ggplot(data = peng_wide,\n  aes(axis1 = year, axis2 = island,\n      axis3 = species, y = freq)) +\n  scale_x_discrete(\n    limits = c(\"Year\", \"Island\", \"Species\"),\n    expand = c(0.1, 0.07)) +\n  geom_alluvium(aes(fill = sex)) +\n  geom_stratum() +\n  geom_text(stat = \"stratum\", \n    aes(label = after_stat(stratum)))\n\nggp2_alluvial_w + \n  labs_alluvial + \n  labs_alluvial_y + \n  labs_alluvial_fill\n\n\n\n\n\nGRAPH:\n\n\nThe ggalluvial functions can handle wide or long data.\n\n\n\n\n\n\n\n\n\n\nALLUVIAL GRAPH (LODES FORM)\n\nDataCodeGraph\n\n\n\nDATA:\n\n\nBelow we create peng_lodes from the penguins dataset using the to_lodes_form() from the ggalluvial package.\n\n\n\npeng_lodes <- penguins |> \n  select(Year = year, Island = island, \n         Species = species, Sex = sex) |> \n  drop_na() |> \n  count(Year, Island, Species, Sex) |> \n  mutate(Year = factor(Year)) |> \n  rename(Freqency = n) |> \n  ggalluvial::to_lodes_form(key = \"Measure\", axes = 1:3) \nglimpse(peng_lodes)\n\nRows: 90\nColumns: 5\n$ Sex      <fct> female, male, female, male, female, male, female, male, femal…\n$ Freqency <int> 5, 5, 16, 17, 9, 10, 13, 13, 8, 7, 9, 9, 22, 23, 8, 8, 9, 9, …\n$ alluvium <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ Measure  <fct> Year, Year, Year, Year, Year, Year, Year, Year, Year, Year, Y…\n$ stratum  <fct> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2…\n\n\n\n\n\n\nCODE:\n\n\nCreate the labels\nMap Measure to x, Frequency to y, stratum to stratum, alluvium to alluvium, and label to stratum.\nAdd the geom_alluvium() and map Sex to fill\nAdd the geom_stratum() and set the width to 0.45\nAdd geom_text() and set stat to \"stratum\"\n\n\n\nlabs_alluvial <- ggtitle(label = \"Palmer Penguins\", \n    subtitle = \"Stratified by year, island and species\")\n\nggp2_alluvial_lf <- ggplot(data = peng_lodes,\n  aes(x = Measure,\n      y = Freqency,\n      stratum = stratum,\n      alluvium = alluvium,\n      label = stratum)) +\n  ggalluvial::geom_alluvium(aes(fill = Sex)) +\n  ggalluvial::geom_stratum(width = 0.45) +\n  geom_text(stat = \"stratum\")\n\nggp2_alluvial_lf + \n  labs_alluvial\n\n\n\n\n\nGRAPH:\n\n\nConvert data to lodes form using to_lodes_form() from the ggalluvial package."
  },
  {
    "objectID": "rela/parallel_sets.html",
    "href": "rela/parallel_sets.html",
    "title": "Parallel Sets",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ndevtools::install_github(\"thomasp85/ggforce\")\ninstall.packages(\"palmerpenguins\")\nlibrary(ggforce)\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nWe’re going to remove the missing values from palmerpenguins::penguins, count the categorical variables (island, sex, species), and rename the n column (produced by the count() function) to value.\nggforce has a special gather_set_data() function that changes tidy data into a tidy(er) format\n\n\n\npeng_wide <- palmerpenguins::penguins |> \n  drop_na() |> \n  count(island, species, sex) |> \n  rename(value = n)\npara_set_peng <- ggforce::gather_set_data(\n                            data = peng_wide, \n                            x = 1:3)\ndplyr::glimpse(para_set_peng)\n\nRows: 30\nColumns: 7\n$ island  <fct> Biscoe, Biscoe, Biscoe, Biscoe, Dream, Dream, Dream, Dream, To…\n$ species <fct> Adelie, Adelie, Gentoo, Gentoo, Adelie, Adelie, Chinstrap, Chi…\n$ sex     <fct> female, male, female, male, female, male, female, male, female…\n$ value   <int> 22, 22, 58, 61, 27, 28, 34, 34, 24, 23, 22, 22, 58, 61, 27, 28…\n$ id      <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, …\n$ x       <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3,…\n$ y       <fct> Biscoe, Biscoe, Biscoe, Biscoe, Dream, Dream, Dream, Dream, To…\n\n\n\n\n\n\n\nCodeGraphSets Labels\n\n\n\nCODE:\n\n\nCreate the labels\nMap x to x, id to id, y to split, and value to value\nIn the geom_parallel_sets() function, map sex to fill and manually set the alpha (opacity) and the axis.width\nIn the geom_parallel_sets_axes() function, set the axis.width to the same value as the geom_parallel_sets() above\nFor labeling, adjust the size manually and set the color to something that stands out against the black vertical axes\nManually label the x axis with scale_x_continuous(), setting the breaks and labels to the variable names in the peng_wide dataset\nFinally, move the legend to the bottom of the graph with theme(legend.position =) and remove the x title with axis.title.x = element_blank()\n\n\n\nlabs_psets <- labs(\n        title = \"Categories of Palmer Penguins\", \n        y = \"Count\", fill = \"Sex\")\n\nggp2_psets <- ggplot(data = para_set_peng, \n    mapping = aes(x = x, \n        id = id, \n        split = y, \n        value = value)) +\n  geom_parallel_sets(aes(fill = sex), \n        alpha = 0.3, \n        axis.width = 0.07) \n\nggp2_psets_axes <- ggp2_psets +\n  geom_parallel_sets_axes(\n        axis.width = 0.07) \n\nggp2_psets_labs <- ggp2_psets_axes +\n  geom_parallel_sets_labels(\n        size = 2.0, \n        color = '#ffffff') +\n  scale_x_continuous(\n        breaks = c(1, 2, 3), \n        labels = c(\"Island\", \"Species\", \"Sex\")) +\n  theme(legend.position = \"bottom\", \n        axis.title.x = element_blank())\n\nggp2_psets_labs +\n    labs_psets\n\n\n\n\n\nGRAPH:\n\n\n\n\n\n\n\n\n\nPARALLEL SETS LABELS:\n\n\nIf the categories have long names, use the angle, nudge_x/nudge_y and hjust/vjust in geom_parallel_sets_labels() to adjust the size, location, and color of the labels.\nManually setting the limits of the x axis in scale_x_continuous() and moving the legend with theme(legend.position = ) will also give more room to the labels.\n\n\n\nggp2_psets_axes + \n  geom_parallel_sets_labels(\n      size = 3.2, \n      colour = 'black',\n      angle = 0, \n      nudge_x = 0.1, \n      hjust = 0) + \n  scale_x_continuous(\n        limits = c(0.9, 3.2),\n        breaks = c(1, 2, 3), \n        labels = c(\"Island\", \"Species\", \"Sex\")) + \n  theme(legend.position = \"bottom\", \n        axis.title.x = element_blank()) + \n    labs_psets"
  },
  {
    "objectID": "rela/bump_charts.html",
    "href": "rela/bump_charts.html",
    "title": "Bump Charts",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ndevtools::install_github(\"davidsjoberg/ggbump\")\nlibrary(ggbump)\ninstall.packages(\"fivethirtyeight\")\nlibrary(fivethirtyeight) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nWe’ll use the fivethirtyeight::tv_hurricanes data, but slightly restructured and filtered.\n\n\n\nfivethirtyeight::tv_hurricanes |> \n  filter(date > as_date(\"2017-09-15\")) |> \n  pivot_longer(cols = -date, \n    names_to = 'hurricane', \n    values_to = 'value') |> \n  group_by(date) |>\n  mutate(rank = rank(value, \n    ties.method = \"random\")) |> \n  ungroup() -> tidy_hurricanes\nglimpse(tidy_hurricanes)\n\nRows: 40\nColumns: 4\n$ date      <date> 2017-09-16, 2017-09-16, 2017-09-16, 2017-09-16, 2017-09-17,…\n$ hurricane <chr> \"harvey\", \"irma\", \"maria\", \"jose\", \"harvey\", \"irma\", \"maria\"…\n$ value     <dbl> 0.0207, 0.1087, 0.0000, 0.0355, 0.0087, 0.1090, 0.0184, 0.03…\n$ rank      <int> 2, 4, 1, 3, 1, 4, 2, 3, 1, 3, 4, 2, 1, 3, 4, 2, 2, 3, 4, 1, …\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap date to the x, rank to the y, and hurricane to color\nAdd ggbump::geom_bump() and set size to 2\nMove legend to bottom with\n\n\n\nlabs_bump <- labs(title = \"TV News Hurricane Mentions\",   \n  subtitle = \"Between Sep 15-25th, 2017\", \n  x = \"Date\", y = \"Rank\", \n  color = \"Hurricanes\")\nggp2_bump <- ggplot(tidy_hurricanes, \n    aes(x = date, \n      y = rank, \n      color = hurricane)) +\n    ggbump::geom_bump(size = 2) + \n    theme(legend.position = \"bottom\")\n\nggp2_bump + \n  labs_bump\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "rela/grouped_scatter_plots.html",
    "href": "rela/grouped_scatter_plots.html",
    "title": "Grouped Scatter-Plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nThe penguins data\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap bill_length_mm to the x axis\nMap flipper_length_mm to the y axis\nMap species to color inside the geom_point()\n\n\n\nlabs_grp_scatter <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\", y = \"Flipper length (mm)\", \n  color = \"Penguin species\")\n\nggp2_grp_scatter <- penguins |> \n  ggplot(\n    aes(x = bill_length_mm, \n        y = flipper_length_mm)) + \n  geom_point(aes(color = species)) \n\nggp2_grp_scatter + \n  labs_grp_scatter\n\n\n\n\n\nGRAPH:\n\n\nAdjust over-plotting with transparency (alpha)"
  },
  {
    "objectID": "rela/grouped_bubble_charts.html",
    "href": "rela/grouped_bubble_charts.html",
    "title": "Grouped Bubble Charts",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nThe penguins data\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap bill_length_mm to the x axis and flipper_length_mm to the y axis\nInside geom_point()\n\nmap body_mass_g to size and species to fill\nset the alpha to 2/3, shape to 21, and color to \"black\"\n\nIn the scale_size()\n\nset range to c(.04, 8) and name to \"Body Mass (g)\"\n\n\n\n\nlabs_grp_bubble <- labs(\n  title = \"Bill Length vs. Flipper Length\",\n  x = \"Bill Length (mm)\", y = \"Flipper length (mm)\", \n  size = \"Body Mass (g)\")\n\nggp2_grp_bubble <- penguins |> \n  ggplot(aes(\n    x = bill_length_mm, y = flipper_length_mm)) + \n  geom_point(\n    aes(size = body_mass_g, fill = species), \n        alpha = 2/3, shape = 21, color = \"black\") + \n  scale_size(range = c(.04, 8), name = \"Body Mass (g)\") \n\nggp2_grp_bubble + \n  labs_grp_bubble\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "prp/stacked_filled_density_graphs.html",
    "href": "prp/stacked_filled_density_graphs.html",
    "title": "Stacked-densities",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nRemove missing sex from the penguins data\n\n\n\npeng_density <- filter(penguins, !is.na(sex))\nglimpse(peng_density)\n\nRows: 333\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, 36.7, 39.3, 38.9, 39.2, 41.1, 38.6…\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, 19.3, 20.6, 17.8, 19.6, 17.6, 21.2…\n$ flipper_length_mm <int> 181, 186, 195, 193, 190, 181, 195, 182, 191, 198, 18…\n$ body_mass_g       <int> 3750, 3800, 3250, 3450, 3650, 3625, 4675, 3200, 3800…\n$ sex               <fct> male, female, female, female, male, female, male, fe…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap the flipper_length_mm to the x and add after_stat(count)\nMap sex to fill\nInside the geom_density() function, set position to \"fill\"\n\n\n\nlabs_fill_density <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Flipper length (millimeters)\",\n  fill = \"Sex\")\nggp2_fill_density <- ggplot(data = peng_density, \n       aes(x = flipper_length_mm, \n           after_stat(count),\n          fill = sex)) +\n      geom_density(position = \"fill\") \nggp2_fill_density + \n  labs_fill_density\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "prp/pie_charts.html",
    "href": "prp/pie_charts.html",
    "title": "Pie Charts",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"ggpubr\")\nlibrary(ggpubr)\ninstall.packages(\"ggplot2movies\")\nlibrary(ggplot2movies) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nRemove the missing values and \"NC-17\" from mpaa and summarise the count and percent.\n\n\n\nmovie_pie <- ggplot2movies::movies |>\n  filter(mpaa != \"\" & mpaa != \"NC-17\") |> \n  group_by(mpaa) |> \n  summarise(cnt = n()) |> \n  mutate(\n    perc = round(cnt / sum(cnt), 3),\n    mpaa = factor(mpaa, \n          levels = c(\"PG\", \"PG-13\", \"R\")))\nglimpse(movie_pie)\n\nRows: 3\nColumns: 3\n$ mpaa <fct> PG, PG-13, R\n$ cnt  <int> 528, 1003, 3377\n$ perc <dbl> 0.108, 0.204, 0.688\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nAssign \"perc\" to x\nAssign labs to label\nAssign \"in\" to lab.pos\nAssign \"white\" to lab.font and color\nAssign \"mpaa\" to fill\nRemove legend with theme(legend.position = \"none\")\n\n\n\nlabs <- paste0(movie_pie$mpaa, \" (\", \n               (100*movie_pie$perc), \"%)\")\nlabs_pie <- labs(\n  title = \"Percent MPAA ratings for IMDB movies\",\n  x = \"Percent MPAA rating\")\n\nggp2_pie <- ggpubr::ggpie(movie_pie, \n          x = \"perc\", label = labs, \n          lab.pos = \"in\", lab.font = \"white\",\n          fill = \"mpaa\", color = \"white\") + \n    theme(legend.position = \"none\")  \n    \nggp2_pie + \n  labs_pie\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "prp/treemaps.html",
    "href": "prp/treemaps.html",
    "title": "Treemaps",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ndevtools::install_github(\"wilkox/treemapify\")\ninstall.packages(\"palmerpenguins\")\nlibrary(treemapify) \nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nFilter the missing values from sex, group the data by species, island, and sex, then count the species and island (then ungroup()).\n\n\n\ntreemap_peng <- penguins |> \n                  select(species, island, sex) |> \n                  tidyr::drop_na() |> \n                  group_by(species, island, sex) |>\n  count(species, island, sex) |> \n  ungroup()\nglimpse(treemap_peng)\n\nRows: 10\nColumns: 4\n$ species <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Chinstrap, Chi…\n$ island  <fct> Biscoe, Biscoe, Dream, Dream, Torgersen, Torgersen, Dream, Dre…\n$ sex     <fct> female, male, female, male, female, male, female, male, female…\n$ n       <int> 22, 22, 27, 28, 24, 23, 34, 34, 58, 61\n\n\n\n\n\n\n\nCodeTreemapSubgroupSubgroup 2\n\n\n\nBASIC TREEMAP:\n\n\nCreate the labels\nMap the n to area, sex to fill and label, species to subgroup, and island to subgroup2\nAdd geom_treemap()\nAdd geom_treemap_text()\n- place\n- color\n- min.size\n- alpha\n- fontface\n- family\n\n\n\nlabs_treemap <- labs(\n  title = \"Species, island, and sex of adult penguins\")\nggp2_treemap <- ggplot(treemap_peng, \n       aes(area = n, \n           fill = sex, \n           label = sex,\n           subgroup = species,\n           subgroup2 = island)) +\n       treemapify::geom_treemap() +\n       treemapify::geom_treemap_text(\n           place = \"bottomright\",\n           color = \"#282b2d\",\n           min.size = 0,\n           alpha = 0.75,\n           fontface = \"italic\",\n           family = \"sans\") \nggp2_treemap + \n  labs_treemap\n\n\n\n\n\nTREEMAP:\n\n\n\n\n\n\n\n\n\nSUBGROUP:\n\n\nAdd geom_treemap_subgroup_border()\n\ncolor\n\nsize\n\nAdd geom_treemap_subgroup_text()\n\nplace\n\nalpha\n\ncolor\n\nmin.size\n\nfamily\n\n\n\n\n\nggp2_tm_subgroup <- ggp2_treemap +\n    treemapify::geom_treemap_subgroup2_border(\n           color = \"#282b2d\",\n           size = 4.0) + \n       treemapify::geom_treemap_subgroup2_text(\n           place = \"center\",\n           alpha = 0.65,\n           color = \"#282b2d\",\n           min.size = 0,\n           family = \"sans\")\nggp2_tm_subgroup +\n  labs_treemap\n\n\n\n\n\n\n\n\nSUBGROUP 2:\n\n\nAdd geom_treemap_subgroup2_border()\n\ncolor\n\nsize\n\nAdd geom_treemap_subgroup2_text()\n\nplace\n\nalpha\n\ncolor\n\nmin.size\n\nfamily\n\nSee full list of arguments here.\n\n\n\nggp2_tm_subgroup2 <- ggp2_tm_subgroup + \n       treemapify::geom_treemap_subgroup_border(\n           color = \"#ffffff\", \n           size = 4) + \n       treemapify::geom_treemap_subgroup_text(\n           place = \"topleft\",\n           alpha = 0.65,\n           grow = TRUE,\n           color = \"#ffffff\",\n           min.size = 0,\n           family = \"mono\",\n           fontface = \"bold\")\n\nggp2_tm_subgroup2 + \n  labs_treemap"
  },
  {
    "objectID": "prp/diverging_bar_graphs.html",
    "href": "prp/diverging_bar_graphs.html",
    "title": "Diverging Bar-graphs",
    "section": "",
    "text": "Graph info\n\n\n\n\n\n\nWhen would I use this graph?\n\n\n\n\n\n\n\n\n\n\n\nIf you have two proportions that contain positive and negative values, consider using diverging bars with geom_bar().\nUnlike a standard or stacked bar graphs, diverging bar graphs display positive and negative quantities on both sides of a reference or baseline value (zero in this example). Color, length and position are used to compare the quantities across categorical levels (and within variable values).\n\n\n\n\n\n\n\n\n\nFor example, we can use the length of the bar from the reference line to compare disapproval estimates across all months (i.e., comparing red bars to each other).\n\n\n\n\n\n\n\n\n\nWe can also compare approval vs. disapproval for each month (i.e., compare the blue vs. red bars to each other within each month)."
  },
  {
    "objectID": "prp/diverging_bar_graphs.html#vertical-diverging-bar-graphs",
    "href": "prp/diverging_bar_graphs.html#vertical-diverging-bar-graphs",
    "title": "Diverging Bar-graphs",
    "section": "Vertical diverging Bar-graphs",
    "text": "Vertical diverging Bar-graphs\nFor vertically arranged bars, we switch the x and y axis variables.\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap the month_avg to the x and month to the y\nInside geom_bar()\n\nmap poll to fill\nuse stat = \"identity\" and width = .5\n\nAdd scale_y_continuous() to manually set the limits and format the axis with scales::percent\n\n\n\nlabs_geom_bar_diverg_vert <- labs(\n  title = \"Trump Approval Ratings\",\n  subtitle = \"From 'How Popular is Donald Trump'\",\n  x = \"Monthly average percent\",\n  y = \"Month\",\n  fill = \"Estimate\")\nggp2_bar_diverg_vert <- ggplot(\n  data = trump_approval_diverg,\n      aes(x = month_avg, y =  month)) +\n  geom_bar(\n      aes(fill = poll), \n        stat = \"identity\", width = .5) + \n  scale_x_continuous(limits = c(-1, 1), \n        labels = scales::percent)\nggp2_bar_diverg_vert + \n  labs_geom_bar_diverg_vert\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "prp/mosaic_plot.html",
    "href": "prp/mosaic_plot.html",
    "title": "Mosaic Plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"fivethirtyeight\")\nlibrary(fivethirtyeight) \ndevtools::install_github(\"haleyjeppson/ggmosaic\")\nlibrary(ggmosaic)\nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\n\n\n\n\n\nFor this graph, we’ll be using the fivethirtyeight::flying dataset, after removing the missing values from baby and unruly_child.\n\n\n\nflying <- fivethirtyeight::flying\nfly_mosaic <- filter(flying, \n              !is.na(baby) & !is.na(unruly_child)) |> \n              select(baby, unruly_child)\nglimpse(fly_mosaic)\n\nRows: 849\nColumns: 2\n$ baby         <ord> No, Somewhat, Somewhat, Somewhat, Very, No, Somewhat, Ver…\n$ unruly_child <ord> No, Very, Very, Very, Very, Somewhat, Very, Very, Very, V…\n\n\n\n\n\n\n\nCodeGraphNotes\n\n\n\nCODE:\n\n\nCreate the labels\nMap the product() of unruly_child and baby to the x axis\nMap baby to fill\nAdd theme_mosaic()\n\n\n\nlabs_mosaic <- labs(\n      title = \"In general...\", \n      subtitle = \"...is it rude to...\",\n      x = \"... bring a baby on a plane?\",\n      y = \"..,knowingly bring unruly children on a plane?\",\n      fill = \"Responses\") \nggp2_mosaic <- ggplot(data = fly_mosaic) +\n  geom_mosaic(aes(x = product(unruly_child, baby), \n      fill = baby)) +\n  theme_mosaic()\nggp2_mosaic + \n    labs_mosaic\n\n\n\n\n\nGRAPH:\n\n\nIt’s a good idea to adjust the fig-height and fig-width of your graph:\n\n\n\n\n\n\n\n\n\nNOTES:\n\n\nIt’s a good idea to read the ggmosaic vignette, particularly the section on ordering and conditioning.\nFor example, if we set the product() variable as unruly_child and the conditional variable as baby, we see a very different display than if we follow the stanard two-variable syntax:\n\n\n\n# build conditional mosiac plot\nlabs_mosaic_cond <- labs(\n  subtitle = \"Conditional plot\",\n  x = \"..,knowingly bring unruly children on a plane?\",\n  y = \"... bring a baby on a plane?\",\n  fill = \"Responses\")\nggp2_mosaic_cond <- ggplot(data = fly_mosaic) +\n  geom_mosaic(aes(\n    x = product(unruly_child), # product variable\n    fill = unruly_child,\n    conds = product(baby))) + # conditional variable\n  theme_mosaic(base_size = 9)\nmosaic_cond <- ggp2_mosaic_cond + labs_mosaic_cond\n# build 2-variable mosiac plot\nlabs_mosaic_2var <- labs(\n  subtitle = \"2-Variable plot\",\n  x = \"..,knowingly bring unruly children on a plane?\",\n  y = \"... bring a baby on a plane?\",\n  fill = \"Responses\")\nggp2_mosaic_2var <- ggplot(data = fly_mosaic) +\n  geom_mosaic(aes(\n    x = product(unruly_child, baby),\n    fill = unruly_child)) +\n  theme_mosaic(base_size = 9)\nmosaic_2var <- ggp2_mosaic_2var + labs_mosaic_2var\n# patch both together\npatchwork::plot_spacer() + # pad the area in front of the plot 1\n  mosaic_cond +\n  patchwork::plot_spacer() + # pad the area in front of the plot 2\n  mosaic_2var +\n  patchwork::plot_layout(\n    # limit to 2 rows\n    nrow = 2,\n    # make plots in column 2 5x the width of column 1\n    widths = c(1, 5)) +\n  patchwork::plot_annotation(\n    # adjust title text size\n    theme = theme_mosaic(base_size = 11),\n    title = \"In general...is it rude to...\")"
  }
]