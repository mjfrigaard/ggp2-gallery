[
  {
    "objectID": "amt/waffle_chart.html",
    "href": "amt/waffle_chart.html",
    "title": "Waffle charts",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ndevtools::install_github(\"liamgilbey/ggwaffle\")\nlibrary(ggwaffle)\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nWaffle charts require a special data transformation with ggwaffle::waffle_iron()\nSet the group argument in ggwaffle::aes_d() as the categorical variable you want to see the relative counts for:\n\n\n\npenguins <- palmerpenguins::penguins\npenguins <- dplyr::mutate(penguins, \n              species = as.character(species))\nwaffle_peng <- ggwaffle::waffle_iron(penguins,\n                      aes_d(group = species))\n\nglimpse(waffle_peng)\n\nRows: 344\nColumns: 3\n$ y     <int> 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6…\n$ x     <int> 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3…\n$ group <chr> \"Adelie\", \"Adelie\", \"Adelie\", \"Adelie\", \"Adelie\", \"Adelie\", \"Ade…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap the x and y to the x and y axes\nMap group to fill\nAdd ggwaffle::geom_waffle()\nAdd ggwaffle::theme_waffle()\n\n\n\nlabs_waffle <- labs(\n  title = \"Waffle chart of palmer penguin species\",\n  x = \"\", y = \"\", fill = \"Species\")\nggp2_waffle <- ggplot(data = waffle_peng, \n       aes(x = x, \n           y = y, \n           fill = group)) + \n  ggwaffle::geom_waffle() \nggp2_waffle + \n  labs_waffle +\n  ggwaffle::theme_waffle()\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "amt/overlapping_bar_graphs.html",
    "href": "amt/overlapping_bar_graphs.html",
    "title": "Overlapping bar-graphs",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nRemove missing sex from penguins and filter to only \"Adelie\" penguins.\n\n\n\npenguins_ovrlp <- filter(penguins,\n                  !is.na(sex) & species == \"Adelie\")\nglimpse(penguins_ovrlp)\n\nRows: 146\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, 36.7, 39.3, 38.9, 39.2, 41.1, 38.6…\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, 19.3, 20.6, 17.8, 19.6, 17.6, 21.2…\n$ flipper_length_mm <int> 181, 186, 195, 193, 190, 181, 195, 182, 191, 198, 18…\n$ body_mass_g       <int> 3750, 3800, 3250, 3450, 3650, 3625, 4675, 3200, 3800…\n$ sex               <fct> male, female, female, female, male, female, male, fe…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap flipper_length_mm to the x and sex to fill\nAdd the geom_bar() layer\n\n\n\nlabs_bar_ovrlp <- labs(\n  title = \"Adelie adult foraging penguins\",\n  x = \"Flipper length (millimeters)\", \n  fill = \"Sex\")\nggp2_bar_ovrlp <- ggplot(data = penguins_ovrlp,\n          aes(x = flipper_length_mm, fill = sex)) +\n                geom_bar() \nggp2_bar_ovrlp + \n  labs_bar_ovrlp\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "amt/grouped_column_graphs.html",
    "href": "amt/grouped_column_graphs.html",
    "title": "Grouped column-graphs",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"ggplot2movies\")\nlibrary(ggplot2movies) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nRemove the missing values from budget and mpaa in the ggplot2movies::movies data.\nWe’ll also reduce the number of columns in the movies data for clarity.\n\n\n\nmovies_grp_col <- ggplot2movies::movies |> \n    filter(!is.na(budget) & mpaa != \"\") |> \n    select(budget, mpaa)\nglimpse(movies_grp_col)\n\nRows: 1,813\nColumns: 2\n$ budget <int> 23000000, 16000000, 1100000, 37000000, 85000000, 42000000, 4000…\n$ mpaa   <chr> \"PG-13\", \"PG-13\", \"R\", \"PG-13\", \"R\", \"R\", \"PG\", \"PG-13\", \"R\", \"…\n\n\n\n\n\n\n\nCodeGraphSummary\n\n\n\nCODE:\n\n\nCreate the labels\nMap mpaa to x and budget to y\nInside geom_col(), map mpaa to fill and remove the legend with show.legend = FALSE\nFormat the y axis with scale_y_continuous() by setting labels to scales::dollar\n\n\n\nlabs_col <- labs(\n  title = \"IMDB movie information/user ratings\",\n  x = \"MPAA rating\", \n  y = \"Total budget in US dollars\")\nggp2_col <- ggplot(data = movies_grp_col,\n              aes(x = mpaa, \n                  y = budget)) + \n        geom_col(aes(fill = mpaa), \n          show.legend = FALSE) + \n        scale_y_continuous(labels = scales::dollar) \nggp2_col + \n  labs_col\n\n\n\n\n\nGRAPH:\n\n\n\n\n\n\n\n\n\nSUMMARY:\n\n\nIf we pass a categorical variable to the x (like mpaa) and a continuous variable to y (like budget), geom_col() will calculate the sum() of y by levels of x\n\n\n\nggplot2movies::movies |>\n    filter(!is.na(budget) & mpaa != \"\") |>\n    select(budget, mpaa) |>\n    group_by(mpaa) |>\n    summarise(tot_bud = sum(budget, na.rm = TRUE),\n        tot_bud = scales::dollar(tot_bud)) |>\n    ungroup() |>\n    select(MPAA = mpaa,\n        `Total budget` = tot_bud)\n\n\n\nWe can see the underlying summary of budget using dplyr’s group_by() and summarise() functions.\n\n\n\n\n\n\n \n  \n    MPAA \n    Total budget \n  \n \n\n  \n    NC-17 \n    $48,637,000 \n  \n  \n    PG \n    $7,728,300,000 \n  \n  \n    PG-13 \n    $21,955,784,000 \n  \n  \n    R \n    $21,078,510,606"
  },
  {
    "objectID": "amt/more_heatmaps.html",
    "href": "amt/more_heatmaps.html",
    "title": "More heatmaps",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"fivethirtyeight\")\nlibrary(fivethirtyeight) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nWe’re going to use the same re-structured version of the fivethirtyeight::bob_ross data, heatmap_ross\n\n\n\nheatmap_ross <- fivethirtyeight::bob_ross |>\n  pivot_longer(-c(episode, season,\n    episode_num, title),\n    names_to = \"object\",\n    values_to = \"present\") |>\n  mutate(present = as.logical(present),\n    object = str_replace_all(object, \"_\", \" \")) |>\n  arrange(episode, object) |> \n  filter(object %in% c(\"conifer\", \"trees\", \n    \"tree\", \"snow\", \"palm trees\", \"grass\", \n    \"flowers\", \"cactus\", \"bushes\", \"cirrus\", \n    \"cumulus\", \"deciduous\", \"clouds\", \"fog\")) |>\n  group_by(season, object) |>\n  summarise(occurrences = sum(present)) |>\n  ungroup()\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nAssign season to x, object to y, and occurrences to fill\nAdd the geom_raster()\n\n\n\nlabs_heatmap_raster <- labs(\n  title = \"Bob Ross' plants & clouds\", \n  x = \"Season\", \n  y = \"Plant/Cloud Object\", \n  fill = \"Occurrences\")\nggp2_heatmap_raster <- ggplot(data = heatmap_ross, \n       aes(x = season, \n           y = object, \n           fill = occurrences)) + \n       geom_raster() \nggp2_heatmap_raster + \n  labs_heatmap_raster\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "amt/summarized_column_graphs.html",
    "href": "amt/summarized_column_graphs.html",
    "title": "Summarized column-graphs",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"ggplot2movies\")\nlibrary(ggplot2movies) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nRemove the missing values and reduce the ggplot2movies::movies dataset to only budget and mpaa, then group the data by mpaa and calculate the mean budget (as avg_budget).\n\n\n\nmovies_sum_col <- ggplot2movies::movies |>\n    filter(!is.na(budget) & mpaa != \"\") |>\n    select(budget, mpaa) |>\n    group_by(mpaa) |>\n    summarise(avg_budget = mean(budget, na.rm = TRUE)) |>\n    ungroup()\nglimpse(movies_sum_col)\n\nRows: 4\nColumns: 2\n$ mpaa       <chr> \"NC-17\", \"PG\", \"PG-13\", \"R\"\n$ avg_budget <dbl> 6948143, 36454245, 41426008, 19810630\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap mpaa to the x and avg_budget to the y\nMap mpaa to fill inside the aes() of geom_col() and remove the legend with show.lengend = FALSE\nFormat the y axis with scale_y_continuous() by setting labels to scales::dollar\n\n\n\nlabs_col <- labs(\n  title = \"IMDB movie information/user ratings\",\n  x = \"MPAA rating\", \n  y = \"Average budget in US dollars\")\nggp2_col <- ggplot(data = movies_sum_col,\n              aes(x = mpaa, \n                  y = avg_budget)) + \n        geom_col(aes(fill = mpaa), \n          show.legend = FALSE) + \n        scale_y_continuous(labels = scales::dollar) \nggp2_col + \n  labs_col\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "amt/heatmaps.html",
    "href": "amt/heatmaps.html",
    "title": "Heatmaps",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"fivethirtyeight\")\nlibrary(fivethirtyeight) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nFor the heatmap, we’re going to re-structure and filter the bob_ross data from the fivethirtyeight package.\n\n\n\nheatmap_ross <- fivethirtyeight::bob_ross |>\n  pivot_longer(-c(episode, season,\n    episode_num, title),\n    names_to = \"object\",\n    values_to = \"present\") |>\n  mutate(present = as.logical(present),\n    object = str_replace_all(object, \"_\", \" \")) |>\n  arrange(episode, object) |> \n  filter(object %in% c(\"conifer\", \"trees\", \n    \"tree\", \"snow\", \"palm trees\", \"grass\", \n    \"flowers\", \"cactus\", \"bushes\", \"cirrus\", \n    \"cumulus\", \"deciduous\", \"clouds\", \"fog\")) |>\n  group_by(season, object) |>\n  summarise(occurrences = sum(present)) |>\n  ungroup()\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nAssign season to x, object to y, and occurrences to fill\nAdd the geom_tile()\n\n\n\nlabs_heatmap_tile <- labs(\n  title = \"Bob Ross' plants & clouds\", \n  x = \"Season\", \n  y = \"Plant & Cloud Objects\", \n  fill = \"Occurrences\")\nggp2_heatmap_tile <- ggplot(data = heatmap_ross, \n       aes(x = season, \n           y = object, \n           fill = occurrences)) + \n       geom_tile() \nggp2_heatmap_tile + \n  labs_heatmap_tile\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "amt/dodge2_bar_graphs.html",
    "href": "amt/dodge2_bar_graphs.html",
    "title": "Side-to-side ('dodge2') bar-graphs",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nRemove any missing values from sex and species in the penguins data.\n\n\n\npenguins_dodge2 <- filter(penguins,\n                    !is.na(sex) & !is.na(species))\nglimpse(penguins_dodge2)\n\nRows: 333\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, 36.7, 39.3, 38.9, 39.2, 41.1, 38.6…\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, 19.3, 20.6, 17.8, 19.6, 17.6, 21.2…\n$ flipper_length_mm <int> 181, 186, 195, 193, 190, 181, 195, 182, 191, 198, 18…\n$ body_mass_g       <int> 3750, 3800, 3250, 3450, 3650, 3625, 4675, 3200, 3800…\n$ sex               <fct> male, female, female, female, male, female, male, fe…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraphCompare\n\n\n\nCODE:\n\n\nCreate the labels\nMap species to x and sex to fill\nInside geom_bar(), set position to \"dodge2\"\n\n\n\nlabs_bar_dodge2 <- labs(\n  title = \"Adelie adult foraging penguins\",\n  subtitle = \"position = 'dodge2'\",\n  x = \"Species\",\n  fill = \"Sex\")\nggp2_bar_dodge2 <- ggplot(data = penguins_dodge2,\n                      aes(x = species,\n                        fill = sex)) +\n                      geom_bar(position = \"dodge2\")\nggp2_bar_dodge2 +\n  labs_bar_dodge2\n\n\n\n\n\nGRAPH:\n\n\n\n\n\n\n\n\n\nCOMPARE:"
  },
  {
    "objectID": "amt/side_to_side_bar_graphs.html",
    "href": "amt/side_to_side_bar_graphs.html",
    "title": "Side-to-side ('dodge') bar-graphs",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nRemove any missing values from sex and species in the penguins data.\n\n\n\npenguins_dodge <- filter(penguins,\n                    !is.na(sex) & !is.na(species))\nglimpse(penguins_dodge)\n\nRows: 333\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, 36.7, 39.3, 38.9, 39.2, 41.1, 38.6…\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, 19.3, 20.6, 17.8, 19.6, 17.6, 21.2…\n$ flipper_length_mm <int> 181, 186, 195, 193, 190, 181, 195, 182, 191, 198, 18…\n$ body_mass_g       <int> 3750, 3800, 3250, 3450, 3650, 3625, 4675, 3200, 3800…\n$ sex               <fct> male, female, female, female, male, female, male, fe…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap species to the x and sex to fill\nInside the geom_bar() function, set position to \"dodge\"\n\n\n\nlabs_bar_dodge <- labs(\n  title = \"Adult foraging penguins\",\n  subtitle = \"position = 'dodge'\",\n  x = \"Penguin Species\",\n  fill = \"Penguin Sex\")\n\nggp2_bar_dodge <- ggplot(data = penguins_dodge,\n                    aes(x = species,\n                      fill = sex)) +\n                    geom_bar(position = \"dodge\")\nggp2_bar_dodge +\n  labs_bar_dodge\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Overview",
    "section": "",
    "text": "Welcome to the ggplot2 graph gallery! This Quarto website contains a series of graphs composed in ggplot2. Install ggplot2 using the code below:\nOr install ggplot2 as part of the tidyverse:"
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "Overview",
    "section": "Data",
    "text": "Data\nAn effort has been made to keep the number of additional packages at a minimum, so most of the graphs have been created with one of two datasets:\n\npenguins\n\n\n\n\n\n\npenguins data\n\n\n\n\n\n\n\nView code\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\npalmerpenguins::penguins |> glimpse()\n\n\n\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nmovies\n\n\n\n\n\n\nmovies data\n\n\n\n\n\n\n\nView code\ninstall.packages(\"ggplot2movies\")\nlibrary(ggplot2movies)\nggplot2movies::movies |> glimpse()\n\n\n\n\nRows: 58,788\nColumns: 24\n$ title       <chr> \"$\", \"$1000 a Touchdown\", \"$21 a Day Once a Month\", \"$40,0…\n$ year        <int> 1971, 1939, 1941, 1996, 1975, 2000, 2002, 2002, 1987, 1917…\n$ length      <int> 121, 71, 7, 70, 71, 91, 93, 25, 97, 61, 99, 96, 10, 10, 10…\n$ budget      <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ rating      <dbl> 6.4, 6.0, 8.2, 8.2, 3.4, 4.3, 5.3, 6.7, 6.6, 6.0, 5.4, 5.9…\n$ votes       <int> 348, 20, 5, 6, 17, 45, 200, 24, 18, 51, 23, 53, 44, 11, 12…\n$ r1          <dbl> 4.5, 0.0, 0.0, 14.5, 24.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4…\n$ r2          <dbl> 4.5, 14.5, 0.0, 0.0, 4.5, 4.5, 0.0, 4.5, 4.5, 0.0, 0.0, 0.…\n$ r3          <dbl> 4.5, 4.5, 0.0, 0.0, 0.0, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5…\n$ r4          <dbl> 4.5, 24.5, 0.0, 0.0, 14.5, 14.5, 4.5, 4.5, 0.0, 4.5, 14.5,…\n$ r5          <dbl> 14.5, 14.5, 0.0, 0.0, 14.5, 14.5, 24.5, 4.5, 0.0, 4.5, 24.…\n$ r6          <dbl> 24.5, 14.5, 24.5, 0.0, 4.5, 14.5, 24.5, 14.5, 0.0, 44.5, 4…\n$ r7          <dbl> 24.5, 14.5, 0.0, 0.0, 0.0, 4.5, 14.5, 14.5, 34.5, 14.5, 24…\n$ r8          <dbl> 14.5, 4.5, 44.5, 0.0, 0.0, 4.5, 4.5, 14.5, 14.5, 4.5, 4.5,…\n$ r9          <dbl> 4.5, 4.5, 24.5, 34.5, 0.0, 14.5, 4.5, 4.5, 4.5, 4.5, 14.5,…\n$ r10         <dbl> 4.5, 14.5, 24.5, 45.5, 24.5, 14.5, 14.5, 14.5, 24.5, 4.5, …\n$ mpaa        <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"R\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"…\n$ Action      <int> 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0…\n$ Animation   <int> 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1…\n$ Comedy      <int> 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1…\n$ Drama       <int> 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0…\n$ Documentary <int> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0…\n$ Romance     <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Short       <int> 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1…\n\n\n\n\n\n\n\nfivethirtyeight\n\n\n\n\n\n\nfivethirtyeight data\n\n\n\n\n\nA few of the graphs use data from the fivethirtyeight package.\n\n\nView code\ninstall.packages(\"fivethirtyeight\")\nlibrary(fivethirtyeight)\nfivethirtyeight::datasets_master |> \n    select(`Data Frame Name`, `Article Title`)"
  },
  {
    "objectID": "index.html#graph-packages",
    "href": "index.html#graph-packages",
    "title": "Overview",
    "section": "Graph Packages",
    "text": "Graph Packages\nMost of the graphs in this gallery can be built using on of ggplot2 ’s many geom_* functions. If a graph requires additional geoms or functions, the development version for these packages have been listed."
  },
  {
    "objectID": "index.html#univariate-graphs",
    "href": "index.html#univariate-graphs",
    "title": "Overview",
    "section": "Univariate Graphs",
    "text": "Univariate Graphs\nThe following graphs are used to display single variable distributions:\n\nBar Graphs\nHistograms\nFrequency Polygons\nDot-Plots\nDensity Plots\nViolin Plots\nBox-Plots"
  },
  {
    "objectID": "index.html#comparing-amounts",
    "href": "index.html#comparing-amounts",
    "title": "Overview",
    "section": "Comparing Amounts",
    "text": "Comparing Amounts\nThe following graphs are used to display amounts:\n\nGrouped column-graphs\nSummarized column-graphs\nOverlapping bar-graphs\nSide-to-side (\"dodge\") bar-graphs\nSide-to-side (\"dodge2\") bar-graphs\nWaffle charts\nggwaffle package\n\n\nView code\n# Waffle Charts\ndevtools::install_github(\"liamgilbey/ggwaffle\")\nlibrary(ggwaffle)\n\n\n\nHeatmaps"
  },
  {
    "objectID": "index.html#comparing-proportions",
    "href": "index.html#comparing-proportions",
    "title": "Overview",
    "section": "Comparing Proportions",
    "text": "Comparing Proportions\nThe following graphs are used to compare proportions:\n\nPie Charts\nggpubr package\n\n\nView code\n# Pie Charts \ndevtools::install_github(\"kassambara/ggpubr\")\nlibrary(ggpubr)\n\n\n\nDiverging Bar-graphs\nVertical\nStacked-densities\nMosaic Plots\nggmosaic package\n\n\nView code\n# Mosaic Charts \ndevtools::install_github(\"haleyjeppson/ggmosaic\")\nlibrary(ggmosaic)\n\n\n\nTreemaps\ntreemapify package\n\n\nView code\n# Treemaps\ndevtools::install_github(\"wilkox/treemapify\")\nlibrary(treemapify)\n\n\n\nParallel Sets"
  },
  {
    "objectID": "index.html#comparing-distributions",
    "href": "index.html#comparing-distributions",
    "title": "Overview",
    "section": "Comparing Distributions",
    "text": "Comparing Distributions\nThese graphs can be used to compare multiple variable distributions:\n\nOverlapping Histograms\nOverlapping Frequency Polygons\nOverlapping Dot-Plots\nBee-swarm Plots\nggbeeswarm package\n\n\nView code\n# Bee-swarm Plots\ndevtools::install_github(\"eclarke/ggbeeswarm\")\nlibrary(ggbeeswarm)\n\n\n\nOverlapping Densities\nRidgeline Plots\nggridges package\n\n\nView code\n# Ridgeline plots \ndevtools::install_github(\"wilkelab/ggridges\")\nlibrary(ggridges)\n\n\n\nGrouped Box-plots\nViolin plots\nRain-cloud plots"
  },
  {
    "objectID": "index.html#relationships",
    "href": "index.html#relationships",
    "title": "Overview",
    "section": "Relationships",
    "text": "Relationships\nThe following graphs are used to display relationships between two (or more) variables:\n\nScatter plots\nGrouped scatter plots\nBubble charts\nGrouped bubble charts\nAlluvial charts\nggalluvial package\n\n\nView code\n# Alluvial charts\ndevtools::install_github(\"corybrunson/ggalluvial\")\nlibrary(ggalluvial)\n\n\n\nBump charts\nggbump package\n\n\nView code\n# Bump charts\ndevtools::install_github(\"davidsjoberg/ggbump\")\nlibrary(ggbump)\n\n\n\nSlope-graphs\nDensity Contours\n2D Bins\nHex Bins\nCorrelograms"
  },
  {
    "objectID": "uni/frequency_polygons.html",
    "href": "uni/frequency_polygons.html",
    "title": "Frequency Polygons",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nThe penguins data\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap flipper_length_mm to the x axis\nAdd the geom_freqpoly() layer\n\n\n\nlabs_freqpoly <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Flipper length (millimeters)\")\nggp2_freqpoly <- ggplot(data = penguins,\n      aes(x = flipper_length_mm)) + \n    geom_freqpoly()\nggp2_freqpoly + \n  labs_freqpoly\n\n\n\n\n\nGRAPH:\n\n\nGRAPH: Experiment to see how many bins fit your variable’s distribution"
  },
  {
    "objectID": "uni/histograms.html",
    "href": "uni/histograms.html",
    "title": "Histograms",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nThe penguins data.\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nAssign flipper_length_mm to the x\nAdd the geom_histogram()\nAdjust the bins accordingly\n\n\n\nlabs_histogram <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Flipper length (millimeters)\")\n\nggp2_hist <- ggplot(data = penguins,\n     aes(x = flipper_length_mm)) + \n     geom_histogram() \nggp2_hist + \n  labs_histogram\n\n\n\n\n\nGRAPH:\n\n\nThe standard number of bins is 30, but ‘you should always override this value, exploring multiple widths to find the best to illustrate the stories in your data.’"
  },
  {
    "objectID": "uni/dot_plots.html",
    "href": "uni/dot_plots.html",
    "title": "Dot-plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nThe penguins data\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap flipper_length_mm to the x axis\nAdd the geom_dotplot() layer\nAdjust the dotsize\n\n\n\nlabs_dotplot <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Flipper length (millimeters)\")\nggp2_dotplot <- ggplot(data = penguins,\n      aes(x = flipper_length_mm)) + \n    geom_dotplot(dotsize = 0.5) \nggp2_dotplot + \n  labs_dotplot\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "uni/density_plots.html",
    "href": "uni/density_plots.html",
    "title": "Density Plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nThe penguins data.\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap flipper_length_mm to the x axis\nAdd the geom_density() layer\n\n\n\nlabs_density <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Flipper length (millimeters)\")\nggp2_density <- ggplot(data = penguins, \n        aes(x = flipper_length_mm)) + \n      geom_density() \n\nggp2_density +\n  labs_density\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "uni/box_plots.html",
    "href": "uni/box_plots.html",
    "title": "Box-Plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"ggplot2movies\")\nlibrary(ggplot2movies) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nFilter ggplot2movies::movies to only include films after the made after 2000, and remove missing values from mpaa and budget.\n\n\n\nmovies_box <- ggplot2movies::movies |> \n                dplyr::filter(year > 2000 & \n                                mpaa != \"\" & \n                                    !is.na(budget))\nglimpse(movies_box)\n\nRows: 838\nColumns: 24\n$ title       <chr> \"100 Mile Rule\", \"13 Going On 30\", \"15 Minutes\", \"2 Fast 2…\n$ year        <int> 2002, 2004, 2001, 2003, 2004, 2003, 2002, 2002, 2001, 2002…\n$ length      <int> 98, 98, 120, 107, 129, 124, 135, 113, 125, 96, 99, 92, 110…\n$ budget      <int> 1100000, 37000000, 42000000, 76000000, 12000000, 20000000,…\n$ rating      <dbl> 5.6, 6.4, 6.1, 5.1, 7.6, 8.0, 7.8, 7.3, 5.4, 5.4, 6.8, 6.1…\n$ votes       <int> 181, 7859, 10866, 9556, 2663, 21857, 15788, 24174, 7298, 8…\n$ r1          <dbl> 4.5, 4.5, 4.5, 14.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.…\n$ r2          <dbl> 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5…\n$ r3          <dbl> 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5…\n$ r4          <dbl> 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5…\n$ r5          <dbl> 14.5, 4.5, 14.5, 14.5, 4.5, 4.5, 4.5, 4.5, 14.5, 14.5, 4.5…\n$ r6          <dbl> 24.5, 14.5, 24.5, 14.5, 4.5, 4.5, 4.5, 14.5, 14.5, 24.5, 1…\n$ r7          <dbl> 14.5, 24.5, 24.5, 14.5, 14.5, 14.5, 14.5, 24.5, 14.5, 24.5…\n$ r8          <dbl> 14.5, 14.5, 14.5, 4.5, 24.5, 24.5, 34.5, 24.5, 14.5, 4.5, …\n$ r9          <dbl> 4.5, 4.5, 4.5, 4.5, 14.5, 24.5, 24.5, 14.5, 4.5, 4.5, 4.5,…\n$ r10         <dbl> 14.5, 14.5, 4.5, 4.5, 24.5, 14.5, 14.5, 14.5, 4.5, 4.5, 14…\n$ mpaa        <chr> \"R\", \"PG-13\", \"R\", \"PG-13\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", …\n$ Action      <int> 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1…\n$ Animation   <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Comedy      <int> 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1…\n$ Drama       <int> 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0…\n$ Documentary <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Romance     <int> 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Short       <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\n\nAssign a blank character string (\"\") to the x axis in labs()\n\nMap length to the y axis and an empty string (\"\") to the x axis\nAdd the geom_boxplot() layer\n\n\n\nlabs_boxplot <- labs(\n  title = \"IMDB Movie information and user ratings\",\n  y = \"Length\", x = \"\")\nggp2_boxplot <- ggplot(data = movies_box, \n           aes(x = \" \", \n               y = length)) +\n        geom_boxplot() \n\nggp2_boxplot + \n  labs_boxplot\n\n\n\n\n\nGRAPH:\n\n\n\n\n\n\n\n\n\n\nMORE ON BOX-PLOTS\n\nSummary StatisticsHow to read a box-plotCompare\n\n\n\nThe table below shows the 25th percentile, the median, the 75th percentile, the IQR, and a histogram of the length column from the movies_box dataset.\n\n\n\n\n\n\n \n  \n    25th \n    Median \n    75th \n    IQR \n    Histogram \n  \n \n\n  \n    92 \n    100 \n    113 \n    21 \n    ▁▇▅▁▁ \n  \n\n\n\n\n\n\n\n\n\nIn the figure below we can see how the box-plot represents each of these numbers using lines and points.\n\n\n\n\n\n\n\nIn ggplot2, values that fall more than 1.5 times the IQR are displayed as individual points (aka outliers). The lines extending from the bottom and top of the main box represent the last non-outlier value in the distribution.\n\n\n\n\nCompare the four graphs of length from movie_box below to the box-plot:"
  },
  {
    "objectID": "uni/violin_plot.html",
    "href": "uni/violin_plot.html",
    "title": "Violin Plots",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nThe penguins data.\n\n\n\npenguins <- palmerpenguins::penguins\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\n\nPlace an empty string (\"\") in the x argument\n\nMap and empty string (\"\") to the x and bill_length_mm to the y\nAdd geom_violin()\n\n\n\nlabs_violin <- labs(\n  title = \"Adult foraging penguins\",\n  subtitle = \"Distribution of bill length\",\n  x = \"\",\n  y = \"Bill length (millimeters)\")\nggp2_violin <- ggplot(data = penguins,\n       aes(x = '', \n           y = bill_length_mm)) +\n       geom_violin() \nggp2_violin + \n  labs_violin\n\n\n\n\n\nGRAPH:"
  },
  {
    "objectID": "uni/bar_graphs.html",
    "href": "uni/bar_graphs.html",
    "title": "Bar-graphs",
    "section": "",
    "text": "PackagesData\n\n\n\nPACKAGES:\n\n\nInstall packages.\n\n\n\ninstall.packages(\"palmerpenguins\")\nlibrary(palmerpenguins) \nlibrary(ggplot2)\n\n\n\n\n\nDATA:\n\n\nFilter the missing values from species in the palmerpenguins::penguins data\n\n\n\npenguins_bar <- palmerpenguins::penguins |> \n    filter(!is.na(species))\nglimpse(penguins_bar)\n\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\nCodeGraph\n\n\n\nCODE:\n\n\nCreate the labels\nMap species to the x axis\nMap species to the fill aesthetic inside the aes() of geom_bar()\nRemove the legend with show.legend = FALSE\n\n\n\nlabs_bar <- labs(\n  title = \"Adult foraging penguins\",\n  x = \"Species\", y = \"Count\", \n  fill = \"Species\")\nggp2_bar <- ggplot(data = penguins_bar,\n       aes(x = species)) +\n    geom_bar(aes(fill = species), \n        show.legend = FALSE)\nggp2_bar +\n  labs_bar\n\n\n\n\n\nGRAPH:"
  }
]