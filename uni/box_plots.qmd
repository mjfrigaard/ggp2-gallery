---
title: "Box-Plots"
format:
  html:
    toc: true
    code-fold: show
    out-height: '100%'
    out-width: '100%'
execute:
  warning: false
  message: false
---

```{r}
#| label: setup
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(lubridate)
library(scales)
library(knitr)
library(kableExtra)
library(colorblindr)
library(downlit)
# options ----
options(
  repos = "https://cloud.r-project.org",
  dplyr.print_min = 6, 
  dplyr.print_max = 6, 
  scipen = 9999)
# fonts ----
library(extrafont)
library(sysfonts)
# import font
extrafont::font_import(
    paths = "../assets/Ubuntu/",
    prompt = FALSE)
# add font
sysfonts::font_add(
    family =  "Ubuntu", 
    regular = "../assets/Ubuntu/Ubuntu-Regular.ttf")
# use font
showtext::showtext_auto()
# add theme
source("../R/theme_ggp2g.R")
# set theme
ggplot2::theme_set(theme_ggp2g(
    base_size = 16))
# install data packages ----
install.packages("ggplot2movies")
install.packages("palmerpenguins")
```



:::: {.callout-note collapse="false" icon=false}
## Graph info
::: {style="font-size: 1.25em; color: #02577A;"}
**Should I use this graph?**
:::

<br>

```{r}
#| label: full_code_display
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-height: '60%'
#| out-width: '60%'
#| fig-align: right
library(ggplot2movies)
library(ggplot2)
penguins <- palmerpenguins::penguins 
labs_boxplot <- labs(
  title = "Adult foraging penguins",
  subtitle = "Distribution of flipper length",
  x = NULL,
  y = "Flipper length (millimeters)")
ggp2_boxplot <- ggplot(data = penguins,
           aes(x = "", 
               y = flipper_length_mm)) +
        geom_boxplot() 
ggp2_boxplot + 
  labs_boxplot
```

Box-plots (sometimes called box-and-whisker plots) use position, lines (vertical and horizontal), and points to convey a collection of summary statistics in a single graph.

::::

## Getting set up

:::: {.panel-tabset}

### Packages

::: {style="font-size: 0.90em; color: #1e83c8;"}
**PACKAGES:**
:::

::: {style="font-size: 0.85em;"}
Install packages.
:::


::: {style="font-size: 0.75em;"}
```{r}
#| label: pkg_code_boxplot
#| eval: true
#| echo: true
#| warning: false
#| message: false
#| results: hide
install.packages("palmerpenguins")
library(palmerpenguins) 
library(ggplot2)
```
:::

### Data

::: {style="font-size: 0.90em; color: #1e83c8;"}
**DATA:**
:::

::: {.column-margin}
![Artwork by @allison_horst](../www/lter_penguins.png){fig-align="right" width="100%" height="100%"}
:::

::: {style="font-size: 0.85em;"}
We'll be using the `penguins` data from `palmerpenguins`.
:::

::: {style="font-size: 0.75em;"}
```{r}
#| label: data_code_box
#| eval: true
#| echo: true
penguins <- palmerpenguins::penguins 
glimpse(penguins)
```
:::
::::

## The grammar

:::: {.panel-tabset}

### Code

::: {style="font-size: 0.90em; color: #1e83c8;"}
**CODE:**
:::

::: {style="font-size: 0.85em;"}

Create labels

  - Assign a blank character string (`""`) to the `x` axis in `labs()`

Map `flipper_length_mm` to the `y` axis and an empty string (`""`) to the `x` axis

Add the `geom_boxplot()` layer

:::

::: {style="font-size: 0.75em;"}
```{r}
#| label: code_graph_box
#| eval: false
#| echo: true 
#| warning: false
#| message: false
#| column: page-inset-right
#| layout-nrow: 1
labs_boxplot <- labs(
  title = "Adult foraging penguins",
  subtitle = "Distribution of flipper length",
  x = "",
  y = "Flipper length (millimeters)")
ggp2_boxplot <- ggplot(data = penguins,
           aes(x = "", 
               y = flipper_length_mm)) +
        geom_boxplot() 
ggp2_boxplot + 
  labs_boxplot
```
:::

### Graph

::: {style="font-size: 0.90em; color: #1e83c8;"}
**GRAPH:**
:::

```{r}
#| label: create_graph_box
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| column: page-inset-right
#| layout-nrow: 1
labs_boxplot <- labs(
  title = "Adult foraging penguins",
  subtitle = "Distribution of flipper length",
  x = "",
  y = "Flipper length (millimeters)")
ggp2_boxplot <- ggplot(data = penguins,
           aes(x = "", 
               y = flipper_length_mm)) +
        geom_boxplot() 
ggp2_boxplot + 
  labs_boxplot
```

::::

### More Info

Below we provide more information on interpreting box-plots. 

:::: {.panel-tabset}

### `movies` data 

::: {style="font-size: 0.85em;"}
We'll use the `ggplot2movies::movies` data to create a box-plot for movie `length`
:::

::: {style="font-size: 0.75em;"}
```{r}
#| label: more_box_pkgs
#| code-fold: true
#| eval: false
#| echo: true
#| warning: false
#| message: false
install.packages("ggplot2movies")
library(ggplot2movies) 
library(ggplot2)
```
:::

::: {style="font-size: 0.85em;"}
Filter `ggplot2movies::movies` to only include films after the made after `2000`, and remove missing values from `mpaa` and `budget`
:::

::: {style="font-size: 0.75em;"}
```{r}
#| label: more_box_data
#| code-fold: true
#| eval: true
#| echo: true
#| warning: false
#| message: false
movies_box <- ggplot2movies::movies |> 
                dplyr::filter(year > 2000 & 
                                mpaa != "" & 
                                    !is.na(budget))
head(movies_box)
```
:::

### Graph

::: {style="font-size: 0.85em;"}

Below we create a box-plot of the `length` variable using the methods described above: 

:::

::: {style="font-size: 0.75em;"}
```{r}
#| label: more_create_graph_box
#| code-fold: true
#| eval: true
#| echo: true
#| warning: false
#| message: false
#| column: page-inset-right
#| layout-nrow: 1
labs_boxplot <- labs(
  title = "IMDB Movie information and user ratings",
  y = "Movie length (min)", x = "")
ggp2_boxplot <- ggplot(data = movies_box, 
           aes(x = " ", 
               y = length)) +
        geom_boxplot() 

ggp2_boxplot + 
  labs_boxplot
```
:::

### Interpret

::: {style="font-size: 0.85em;"}
The table below shows the 25th percentile, the median, the 75th percentile, the IQR, and a histogram of the `length` variable from the `movies_box` dataset.
:::

::: {style="font-size: 0.75em;"}
```{r}
#| label: box_table_stats
#| eval: true
#| echo: false 
#| column: page-inset-right
lgnth_skim <- skimr::skim(movies_box$length)
LengthBoxStats <- select(lgnth_skim,
     `25th` = numeric.p25, Median = numeric.p50,
     `75th` = numeric.p75, Histogram = numeric.hist) %>%
     mutate(IQR = IQR(movies_box$length, na.rm = TRUE)) %>%
     select(`25th`, Median, `75th`, IQR, Histogram)
kableExtra::kable_paper(
  kable_input = knitr::kable(LengthBoxStats), 
  font_size = 14
  )
```
:::

::: {style="font-size: 0.85em;"}
The figure below displays how each element in the box-plot represents each of the statistics using lines and points.
:::

:::: {.column-margin}
::: {style="font-size: 0.85em;"}
In `ggplot2`, values that fall more than 1.5 times the IQR are displayed as individual points (aka outliers). The lines extending from the bottom and top of the main box represent the last non-outlier value in the distribution.
:::
::::

![](../www/boxplot-diagram.png){fig-align="center" width="100%" height="100%"}


### Compare

::: {style="font-size: 0.85em;"}
Compare the `geom_point()`, `geom_freqpoly()`, `geom_histogram()`, and `geom_density()` graphs of `length` from `movie_box` below to the `geom_boxplot()`:
:::

::: {.column-page-inset}
![](../www/boxplot-comparisons.png){fig-align="center" width="100%" height="100%"}
:::


::::
